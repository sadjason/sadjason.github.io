(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{178:function(e,t,n){"use strict";n.r(t);var a=n(0),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("第一次遇到"),n("code",[e._v("IBInspectable")]),e._v("是在"),n("a",{attrs:{href:"https://github.com/romaonthego/RESideMenu",target:"_blank",rel:"noopener noreferrer"}},[e._v("RESideMenu"),n("OutboundLink")],1),e._v("中，RESideMenu 是 github 上非常著名的一个开源库，主要是实现侧滑菜单，到今天已经有四千多 stars 了；关于 RESideMenu 的更多信息，可以移步到 github 中去查找。")]),e._v(" "),n("p",[e._v("在使用 RESideMenu 的过程中，看到这样的场景：")]),e._v(" "),n("e-img",{attrs:{src:"/image/20150704-10.png"}}),e._v(" "),n("p",[e._v("当时就勾起了我的好奇心，因为我早就想着 Apple 啥时候能让自定义 View 或 ViewController 能够在 Interface Builder 中进行配置（编辑属性）。")]),e._v(" "),n("p",[e._v("后来查看 RESideMenu.h 文件，看到一个从未见过的关键字"),n("code",[e._v("IBInspectable")]),e._v("：")]),e._v(" "),n("e-img",{attrs:{src:"/image/20150704-11.png"}}),e._v(" "),n("p",[e._v("问题似乎变得很清晰了，"),n("code",[e._v("IBInspectable")]),e._v("指令能够让我们在 Interface Builder 中编辑对应类的属性。")]),e._v(" "),n("p",[e._v("接着在搜索引擎中搜索"),n("code",[e._v("IBInspectable")]),e._v("关键字，才搞明白"),n("code",[e._v("IBInspectable")]),e._v("是 Xcode6 新引入的指令，同时引入的还有另外一个指令"),n("code",[e._v("IBDesignable")]),e._v("。")]),e._v(" "),n("p",[n("strong",[e._v("IBInspectable 和 IBDesignable")])]),e._v(" "),n("p",[e._v("Apple 的官方文档《"),n("a",{attrs:{href:"https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/BuildingCocoaApps/WritingSwiftClassesWithObjective-CBehavior.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Using Swift With Cocoa and Objective-C"),n("OutboundLink")],1),e._v("》中有关于"),n("code",[e._v("IBInspectable")]),e._v("和"),n("code",[e._v("IBDesignable")]),e._v("的介绍，如下：")]),e._v(" "),n("e-img",{attrs:{src:"/image/20150704-09.png"}}),e._v(" "),n("p",[e._v("简单来说，"),n("code",[e._v("IBInspectable")]),e._v("使得在 Interface Builder 的 Attribute Inspector（属性检查器）中能够查看类的属性，而"),n("code",[e._v("IBDesignable")]),e._v("能实时更新视图，很厉害吧！")]),e._v(" "),n("p",[e._v("P.S: inspectable 表示「可视的」。")]),e._v(" "),n("p",[e._v("下面将以实际例子更加生动说明"),n("code",[e._v("IBInspectable")]),e._v("和"),n("code",[e._v("IBDesignable")]),e._v("的使用方法和效果。")]),e._v(" "),n("p",[n("strong",[e._v("使用 IBInspectable")])]),e._v(" "),n("p",[e._v("举个栗子，定义一个继承自 UIView 的类 CustomView，如下：")]),e._v(" "),n("div",{staticClass:"language-objectivec extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("@interface")]),e._v(" CustomView "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" UIView\n    \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("@property")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("nonatomic"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" assign"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" IBInspectable CGFloat customWidth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("@property")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("nonatomic"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" assign"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" IBInspectable CGFloat customHeight"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("@property")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("nonatomic"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" strong"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" IBInspectable NSString "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v("customTitle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("@property")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("nonatomic"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" strong"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" IBInspectable UIColor "),n("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v("customColor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("@property")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("nonatomic"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" assign"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" IBInspectable BOOL customHidden"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n    \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("@end")]),e._v("\n")])])]),n("p",[e._v("再在 Interface Builder 中创建一个 View，该 View 的 Custom Class 指向到刚刚创建的类 Custom View，在其 Attributes Inspector 中果然能够实时看到如下信息：")]),e._v(" "),n("e-img",{attrs:{src:"/image/20150704-12.png"}}),e._v(" "),n("p",[e._v("这使得我们能够添加一些自定义的运行时属性，这些属性将会在 view 加载时设置它的初始值。")]),e._v(" "),n("e-img",{attrs:{src:"/image/20150704-13.png"}}),e._v(" "),n("p",[n("strong",[e._v("使用 IBDesignable")])]),e._v(" "),n("p",[e._v("上文已经讲过："),n("code",[e._v("IBDesignable")]),e._v("能实时更新视图。具体是怎么回事儿呢？")]),e._v(" "),n("p",[e._v("关于"),n("code",[e._v("IBDesignable")]),e._v("的内容摘自[IBInspectable/IBDesignable]（http://www.cocoachina.com/ios/20150227/11202.html）")]),e._v(" "),n("p",[e._v("当应用到 UIView 或 NSView 子类中的时候，IBDesignable 让 Interface Builder 知道它应该在画布上直接渲染视图。你会看到你的自定义视图在每次更改后不必编译并运行你的应用程序就会显示。")]),e._v(" "),n("p",[e._v("标记一个自定义视图为 Designable，只需在类名前加上 IBDesignable 的前缀（Objective-C 中加上 IB_DESIGNABLE）。你的初始化、布置和绘制方法将被用来在画布上渲染你的自定义视图：")]),e._v(" "),n("div",{staticClass:"language-objectivec extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[e._v("IB_DESIGNABLE\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("@interface")]),e._v(" CustomView "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" UIView\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("@end")]),e._v("\n")])])]),n("e-img",{attrs:{src:"/image/20150704-14.png"}}),e._v(" "),n("p",[e._v("从这个功能上节约的时间是不能被低估的。加上"),n("code",[e._v("IBInspectable")]),e._v("，一个设计师或开发人员可以轻松地调整自定义控件的呈现，以得到她想要的确切的结果。任何改变，无论是从代码或属性检查器中，都将立即呈现在画布上。")]),e._v(" "),n("p",[e._v("由于在 Interface Builder 中呈现自定义视图不会有应用程序的完整上下文，你可能需要生成模拟数据以便显示，例如一个默认用户头像图片或仿制的天气数据。有两种方法可以为这个特殊的上下文添加代码。")]),e._v(" "),n("p",[e._v("第一种是使用"),n("code",[e._v("prepareForInterfaceBuilder()")]),e._v("方法。\n"),n("code",[e._v("prepareForInterfaceBuilder()")]),e._v("方法与你代码的其余部分一起编译，但只有当视图正在准备在 Interface Builder 显示时执行。")]),e._v(" "),n("p",[e._v("第二种是使用"),n("code",[e._v("#if TARGET_INTERFACE_BUILDER")]),e._v("宏。\n"),n("code",[e._v("#if TARGET_INTERFACE_BUILDER")]),e._v("预处理宏在 Objective-C 或 Swift 下都是工作的，它会视情况编译正确代码：")]),e._v(" "),n("div",{staticClass:"language-objectivec extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objectivec"}},[n("code",[n("span",{pre:!0,attrs:{class:"token macro property"}},[e._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("if")]),e._v(" !TARGET_INTERFACE_BUILDER")]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// this code will run in the app itself")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[e._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("else")])]),e._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// this code will execute only in IB")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[e._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[e._v("endif")])]),e._v("\n")])])]),n("p",[n("strong",[e._v("IBDesignable 和 IBInspectable 结合使用")])]),e._v(" "),n("p",[e._v("把自定义 IBDesignable 视图和视图里的 IBInspectable 属性结合在一起，你能干点啥？作为一个例子，让我们更新老式经典"),n("a",{attrs:{href:"http://www.folklore.org/StoryView.py?story=Calculator_Construction_Set.txt",target:"_blank",rel:"noopener noreferrer"}},[e._v("Apple folklore"),n("OutboundLink")],1),e._v("：在“Steve Jobs Roll Your Own Calculator Construction Set”，Xcode 6 的风格：")]),e._v(" "),n("e-img",{attrs:{src:"/image/20150704-15.gif"}}),e._v(" "),n("p",[e._v("介绍"),n("code",[e._v("IBDesignable")]),e._v("的内容完全摘自《"),n("a",{attrs:{href:"http://www.cocoachina.com/ios/20150227/11202.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("IBInspectable/IBDesignable"),n("OutboundLink")],1),e._v("》，还不是非常理解，至少对"),n("code",[e._v("IBDesignable")]),e._v("的强大功能的体会还不够深，希望以后能够补充更多的示例说明。")]),e._v(" "),n("p",[e._v("最后，再次让我感觉到 iOS 开发不是我想象中那么简单的，我甚至连很多工具都没使用好，路漫漫其修远兮！")]),e._v(" "),n("p",[n("strong",[e._v("本文参考")])]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"http://www.cocoachina.com/industry/20140619/8883.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("如何在 iOS 8 中使用 Swift 和 Xcode 6 制作精美的 UI 组件"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"http://www.weheartswift.com/make-awesome-ui-components-ios-8-using-swift-xcode-6/",target:"_blank",rel:"noopener noreferrer"}},[e._v("How to make awesome UI components in iOS 8 using Swift and XCode 6"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"http://www.cocoachina.com/ios/20150227/11202.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("IBInspectable/IBDesignable"),n("OutboundLink")],1)])])],1)}),[],!1,null,null,null);t.default=s.exports}}]);