(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{107:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("闲来无事，决定着手分析 RxSwift 的源码，以便对它有更好的理解，所针对版本是 v3.0。")]),s._v(" "),a("p",[s._v("个人感觉，RxSwift（v3.0）的源码比 ReactiveCocoa（v2.5）要更难读懂，决定从小处着手，尝试对下面一段代码进行分析：")]),s._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/************ 一段简单的RxSwift订阅逻辑代码 ************/")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" observable "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Observable")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" observer "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\n    observer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("onNext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    observer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("onCompleted")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Disposables")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("create "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"subscription disposable"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// mark 1")]),s._v("\n  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" binaryDisposable "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" observable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("subscribe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("onNext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("$"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// mark 2")]),s._v("\n  \nbinaryDisposable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("dispose")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// mark 3")]),s._v("\n")])])]),a("p",[a("code",[s._v("mark 1")]),s._v("处，创建一个"),a("code",[s._v("AnonymousObservable")]),s._v("对象，传入的 closure 本文称为「Subscribe Closure」。")]),s._v(" "),a("p",[a("code",[s._v("mark 2")]),s._v("处执行的逻辑其实是 ObservableType 的扩展方法：")]),s._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/************ ObservableType+Extensions.swift ************/")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("subscribe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("onNext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("E"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" onError"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Swift")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" onCompleted"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" onDisposed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("nil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Disposable")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" disposable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Disposable")]),s._v("\n \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" disposed "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" onDisposed "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        disposable "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Disposables")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("with"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" disposed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        disposable "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Disposables")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" observer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("AnonymousObserver")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("E"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" e "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" e "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            onNext"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            onError"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            disposable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("dispose")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("completed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            onCompleted"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            disposable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("dispose")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Disposables")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("subscribeSafe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("observer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// fake 1")]),s._v("\n        disposable\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("在这层逻辑中，根据"),a("code",[s._v("onNext")]),s._v("/"),a("code",[s._v("onError")]),s._v("/"),a("code",[s._v("onCompleted")]),s._v("等 closure 创建一个 observer（"),a("code",[s._v("AnonymousObserver")]),s._v("实例）（下文称该对象为 Anonymous Observer），并在"),a("code",[s._v("fake 1")]),s._v("处订阅新创建的 observer。最后返回一个 disposable，该 disposable 的类型是"),a("code",[s._v("BinaryDisposable")]),s._v("（本文就叫它"),a("code",[s._v("Binary Disposable")]),s._v("，它包含两个子 disposables，为了叙述方便，本文称它们为：")]),s._v(" "),a("ul",[a("li",[s._v("Disposer")]),s._v(" "),a("li",[s._v("User Disposable")]),s._v(" "),a("li")]),s._v(" "),a("p",[s._v("User Disposable 的 dispose 逻辑，本质上是用户在执行"),a("code",[s._v("subscribe(onNext, onError, onCompleted, onDisposed)")]),s._v("时传入的 onDisposed closure；本文着重关心"),a("code",[s._v("fake 1")]),s._v("返回的 Disposer。")]),s._v(" "),a("p",[s._v("Disposer 是什么东西呢？这得展开"),a("code",[s._v("subscribeSafe(_:)")]),s._v("方法，该方法定义非常简单：")]),s._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/************ ObservableType#subscribeSafe ************/")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extension")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("ObservableType")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/// All internal subscribe calls go through this method.")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" subscribeSafe"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("O"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("ObserverType")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("_")]),s._v(" observer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" O"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Disposable")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" O"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("E "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" E "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("asObservable")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("subscribe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("observer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// book 1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("上文提到，"),a("code",[s._v("mark 1")]),s._v("创建了"),a("code",[s._v("AnonymousObservable")]),s._v("对象，"),a("code",[s._v("AnonymousObservable")]),s._v("的继承树是：")]),s._v(" "),a("div",{staticClass:"language-textile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-textile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token phrase"}},[a("span",{pre:!0,attrs:{class:"token table"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token inline"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")])]),s._v("AnonymousObservable\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token inline"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")])]),s._v("Producer\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")])]),a("span",{pre:!0,attrs:{class:"token inline"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")])]),s._v("Observable\n")])])])]),a("p",[s._v("简单来说，"),a("code",[s._v("ObservableType#subscribeSafe(_:)")]),s._v("的"),a("code",[s._v("book 1")]),s._v("处，本质上是回调"),a("code",[s._v("Producer#subscribe(_:)")]),s._v("，该方法有两个分支（if-else），只看其中一个即可：")]),s._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("CurrentThreadScheduler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("schedule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("_")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" disposer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("SinkDisposer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// find 1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" sinkAndSubscription "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("observer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" cancel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" disposer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//find 2")]),s._v("\n    disposer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setSinkAndSubscription")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sink"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" sinkAndSubscription"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sink"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" subscription"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" sinkAndSubscription"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("subscription"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// find 3")]),s._v("\n \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" disposer  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// find 4")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("代码中，"),a("code",[s._v("find 1")]),s._v("创建一个"),a("code",[s._v("SinkDisposer")]),s._v("对象，并在"),a("code",[s._v("find 4")]),s._v("处返回，由此可以断定，上文提到的 Disposer 是一个"),a("code",[s._v("SinkDisposer")]),s._v("实例。")]),s._v(" "),a("p",[s._v("分析代码可知，"),a("code",[s._v("SinkDisposer")]),s._v("对象是一个 disposable，可以理解为一个容器，它持有两个子 disposable：")]),s._v(" "),a("ul",[a("li",[s._v("Sink")]),s._v(" "),a("li",[s._v("Subscription Disposable")])]),s._v(" "),a("p",[a("code",[s._v("SinkDisposer")]),s._v("被 disposed 时，这两个子 disposable 也会被 disposed。")]),s._v(" "),a("p",[s._v("在 RxSwift（v3.0）的设计中，基于"),a("code",[s._v("Producer")]),s._v("创建了各种各样的 observer 类型，每个 observer 几乎都对应一个 sink，譬如"),a("code",[s._v("Deferred")]),s._v("-"),a("code",[s._v("DeferredSink")]),s._v("。")]),s._v(" "),a("p",[s._v("对"),a("code",[s._v("AnonymousObservable")]),s._v("而言，订阅其对象时，最终会触发其 sink（"),a("code",[s._v("AnonymousObservableSink")]),s._v("）的 run 方法：")]),s._v(" "),a("div",{staticClass:"language-swift extra-class"},[a("pre",{pre:!0,attrs:{class:"language-swift"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/************ AnonymousObservableSink#run ************/")]),s._v("\n \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("_")]),s._v(" parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Parent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Disposable")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("_subscribeHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("AnyObserver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("这里的"),a("code",[s._v("parent._subscribeHandler")]),s._v("其实就是上文提到的 Subscribe Closure，给 Subscribe Closure 传入的参数并非上文创建的 Anonymous Observable，而是一个新创建的"),a("code",[s._v("AnyObserver")]),s._v("实例（下文称之为 Any Observer），值得一提的是，"),a("code",[s._v("AnyObserver")]),s._v("是一个 struct 类型。")]),s._v(" "),a("p",[s._v("换句话说，下面代码中的"),a("code",[s._v("observer")]),s._v("其实是一个"),a("code",[s._v("AnyObserver")]),s._v("类型。")]),s._v(" "),a("p",[s._v("上面文字有些凌乱，给张图看看吧！")]),s._v(" "),a("e-img",{attrs:{src:"/image/reference-relationship@2x.png"}}),s._v(" "),a("p",[s._v("上图是我阅读代码过程中结合自己的理解画的图。")]),s._v(" "),a("p",[s._v("RxSwift 在构建 observer、observable、disposable 的关系时，实际上创建了很多内部类型，内部类型之间的关系比较凌乱，不太容易理清楚。但实际曝露给用户的只有 Any Observer 和 Binary Disposable，以及 observer。")]),s._v(" "),a("p",[s._v("代码中比较难梳理的是 Disposer（"),a("code",[s._v("SinkDisposer")]),s._v("）和 Sink（"),a("code",[s._v("AnonymousObservableSink")]),s._v("）的关系，尤其比较奇怪它们居然相互引用。难道不怕内存泄漏？然而，实际上是没有问题的，有时间再在此基础上梳理一下内存关系。")]),s._v(" "),a("h3",{attrs:{id:"q-a"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#q-a"}},[s._v("#")]),s._v(" Q & A")]),s._v(" "),a("p",[s._v("上面写得有些乱，以 Q & A 形式重新梳理一下吧。")]),s._v(" "),a("p",[a("strong",[s._v("Q: Event 的传播路径是怎样的？")])]),s._v(" "),a("p",[s._v("就"),a("code",[s._v("AnonymousObservable")]),s._v("和"),a("code",[s._v("AnonymousObservableSink")]),s._v("而言，event 的传播路径如下：")]),s._v(" "),a("e-img",{attrs:{src:"/image/event-translate-path@2x.png"}}),s._v(" "),a("p",[s._v("Any Observer 暴露给用户，用户在它的基础上发射 event，之后经过 Sink 转发，最后到达 Anonymous Observer，后者封装了用户定义的 onNext closure，进而进行处理。")]),s._v(" "),a("p",[s._v("然而，当 Sink 的 disposed 状态为 true 时，event 就不传播到 Anonymous Observer。据我所知，目前有两种情况会触发 Sink 的 dispose：")]),s._v(" "),a("ul",[a("li",[s._v("Any Observer 传入的 event 为 error 或者 completed 时")]),s._v(" "),a("li",[s._v("Binary Disposable 被 disposed 时，会导致 Disposer 被 disposed，进而触发 Sink 被 disposed")])]),s._v(" "),a("p",[a("strong",[s._v("Q: 如何理解 User Disposable？")])]),s._v(" "),a("p",[s._v("就执行时机来说，User Disposable 里封装的 onDisposed closure 在两种情况下会被回调，但是它只会被调用一次，User Disposable 的本质是"),a("code",[s._v("AnonymousDisposable")]),s._v("实例（若 onDisposed 不为空），它在执行 disposed closure 后，将其置为 nil，以确保下次不会再被执行。")]),s._v(" "),a("p",[s._v("就功能来说，目前还不理解这个有啥用，毕竟 ReactiveCocoa（v2.5）中没有这个东西，希望以后能补充吧！")]),s._v(" "),a("p",[a("strong",[s._v("Q: 如何理解 Disposer？")])]),s._v(" "),a("p",[s._v("基于"),a("code",[s._v("Producer")]),s._v("的 observer，其 Disposer 都是一样的，都是"),a("code",[s._v("SinkDisposer")]),s._v("类型。")]),s._v(" "),a("p",[s._v("从代码上看，它主要用来管理 Subscription Disposable 和 Sink，确保在合适的时机对它们进行 dispose。")]),s._v(" "),a("p",[a("strong",[s._v("Q: 如何理解 Sink？")])]),s._v(" "),a("p",[s._v("对 Sink 的理解还不透彻，感觉在讨论多个级联 operation 时才能比较清晰地看出它的意义。")]),s._v(" "),a("p",[a("strong",[s._v("Q: Subscribe Closure 里的 observer 一定都是 AnyObserver 类型吗？")])]),s._v(" "),a("p",[s._v("不晓得，以后补充吧！")]),s._v(" "),a("p",[a("strong",[s._v("本文参考")])]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://www.jianshu.com/p/3873842ec824",target:"_blank",rel:"noopener noreferrer"}},[s._v("RxSwift Observable 源码分析"),a("OutboundLink")],1)])])],1)}),[],!1,null,null,null);t.default=e.exports}}]);