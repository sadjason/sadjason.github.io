(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{190:function(t,v,_){"use strict";_.r(v);var a=_(0),s=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("p",[t._v("常见问题：")]),t._v(" "),_("ul",[_("li",[t._v("GET v.s POST")]),t._v(" "),_("li",[t._v("常见的首部\n"),_("ul",[_("li",[t._v("Cookie")]),t._v(" "),_("li",[t._v("Set-Cookie")]),t._v(" "),_("li",[t._v("Content-Type： body 类型，常见值包括"),_("code",[t._v("application/json")])]),t._v(" "),_("li",[t._v("EtagEtag, Last-Modified: 与缓存有关")]),t._v(" "),_("li",[t._v("Authorization: 与认证有关")])])]),t._v(" "),_("li",[t._v("HTTP 的三大不足是啥？")]),t._v(" "),_("li",[t._v("HTTPS 是如何解决 HTTP 的三大不足？")]),t._v(" "),_("li",[t._v("报文加密 v.s 信道加密？")]),t._v(" "),_("li",[t._v("什么是中间人攻击？")]),t._v(" "),_("li",[t._v("什么是数字签名？")]),t._v(" "),_("li",[t._v("什么是单向身份验证？")]),t._v(" "),_("li",[t._v("什么是双向身份验证？")]),t._v(" "),_("li",[t._v("什么是对称密钥加密系统？")]),t._v(" "),_("li",[t._v("什么是不对称密钥加密系统？")])]),t._v(" "),_("h1",{attrs:{id:"http-的三大不足"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#http-的三大不足"}},[t._v("#")]),t._v(" HTTP 的三大不足")]),t._v(" "),_("h2",{attrs:{id:"窃听风险"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#窃听风险"}},[t._v("#")]),t._v(" 窃听风险")]),t._v(" "),_("p",[t._v("通过加密防止报文被窃听：")]),t._v(" "),_("ul",[_("li",[t._v("内容加密")]),t._v(" "),_("li",[t._v("信道加密")])]),t._v(" "),_("h2",{attrs:{id:"冒充风险"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#冒充风险"}},[t._v("#")]),t._v(" 冒充风险")]),t._v(" "),_("p",[t._v("任何人都可以发起请求，HTTP 协议并没有要求对通信方进行确认：")]),t._v(" "),_("ul",[_("li",[t._v("无法保证 request 发送到了目标 server，有可能接收者是伪装的 server")]),t._v(" "),_("li",[t._v("无法保证 response 是被正确的 client 接收，有可能接收者是伪装的 client")])]),t._v(" "),_("p",[t._v("通过证书验证身份，可以解决冒充问题。")]),t._v(" "),_("h2",{attrs:{id:"篡改风险"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#篡改风险"}},[t._v("#")]),t._v(" 篡改风险")]),t._v(" "),_("p",[t._v("上文已经提到，通过内容加密方式，可以避免报文敏感信息被窃听，但是无法避免报文被篡改。")]),t._v(" "),_("p",[t._v("譬如，request 或 response 在传输途中，遭受攻击者拦截并篡改内容，这种攻击行为被称为中间人攻击（Man-In-The-Middle attack，MITM attack）。")]),t._v(" "),_("p",[t._v("如何解决？在 HTTP 应用中，一种常见的策略是使用散列值校验，简单来说，发送方使用散列值算法（最常见的有 MD5、SHA-1）等，对消息进行哈希，得到固定长度的哈希值（即摘要），将该哈希值与消息一起传给对方，对方在收到 message 后，也使用约定的散列值算法对报文进行哈希，再与发送方的哈希值进行对比，如果不一致，则说明报文已被篡改，不安全。")]),t._v(" "),_("h1",{attrs:{id:"数字签名"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数字签名"}},[t._v("#")]),t._v(" 数字签名")]),t._v(" "),_("p",[t._v("数字签名是附加在报文上的特殊加密校验码，即所谓的校验和。")]),t._v(" "),_("p",[t._v("数字签名算法的输入是啥呢？报文消息？No！数字签名算法对消息的长度和格式是有要求的，要求数据满足一定的条件。所以不能直接使用报文消息作为输入。一般策略是是对报文消息先进行哈希，得到固定长度的哈希值，然后在对哈希值进行签名。")]),t._v(" "),_("h1",{attrs:{id:"tls"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tls"}},[t._v("#")]),t._v(" TLS")]),t._v(" "),_("h2",{attrs:{id:"单向认证"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#单向认证"}},[t._v("#")]),t._v(" 单向认证")]),t._v(" "),_("h2",{attrs:{id:"双向认证"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#双向认证"}},[t._v("#")]),t._v(" 双向认证")])])}),[],!1,null,null,null);v.default=s.exports}}]);