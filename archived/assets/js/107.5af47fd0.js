(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{118:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("程序设计语言中有各种各样的设计模式（pattern）和与此对应的反设计模式（anti-pattern），譬如 singleton、factory、observer、MVC 等等。对于基于 Objective-C 的 iOS 开发而言，有些设计模式几乎已经成为开发环境的一部分，譬如 MVC，自打我们设计第一个页面开始就已经开始与之打交道了；KVO，即 Key-Value Observing（根据我的理解它属于 observer 设计模式）也一样，只是它已经成为 Objective-C 事实标准了，作为一个 iOS 开发者，必须对它有相当的了解。")]),t._v(" "),s("p",[t._v("之前对 KVO 的了解仅限于使用层面，没有去想过它是如何实现的，更没有想过它会存在一些坑；甚至在刚接触它时，会尽可能创造机会使用它，譬如监听"),s("code",[t._v("UITextField#text")]),t._v("值的变化；但近几天接触了 Objective-C 的 Runtime 相关的知识，从 Runtime 层面了解到了 KVO 的实现原理（即 KVO 的消息转发机制），也通过阅读各位大神的博客了解到了它的坑。")]),t._v(" "),s("p",[t._v("本文首先分析 KVO 和 Runtime 的关系，阐述 KVO 的实现原理；然后结合大神们的博客整理 KVO 存在的坑以及避免掉坑的正确使用姿势。")]),t._v(" "),s("h2",{attrs:{id:"kvo-和-runtime"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kvo-和-runtime"}},[t._v("#")]),t._v(" KVO 和 Runtime")]),t._v(" "),s("p",[t._v("关于 KVO，即 Key-Value Observing，官方文档《Key-Value Observing Programming Guide》里的介绍比较简短明了：")]),t._v(" "),s("blockquote",[s("p",[t._v("Key-value observing is a mechanism that allows objects to be notified of changes to specified properties of other objects.")])]),t._v(" "),s("p",[s("strong",[t._v("KVO 的实现")])]),t._v(" "),s("p",[t._v("KVO 的实现也依赖于 Objective-C 的 Runtime，官方文档《Key-Value Observing Programming Guide》中在《"),s("a",{attrs:{href:"https://developer.apple.com/library/prerelease/content/documentation/Cocoa/Conceptual/KeyValueObserving/Articles/KVOImplementation.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Key-Value Observing Implementation Details"),s("OutboundLink")],1),t._v("》部分简单提到它的实现：")]),t._v(" "),s("blockquote",[s("p",[t._v("Automatic key-value observing is implemented using a technique called isa-swizzling.\nThe isa pointer, as the name suggests, points to the object's class which maintains a dispatch table. This dispatch table essentially contains pointers to the methods the class implements, among other data.\nWhen an observer is registered for an attribute of an object the isa pointer of the observed object is modified, pointing to an intermediate class rather than at the true class. As a result the value of the isa pointer does not necessarily reflect the actual class of the instance.\nYou should never rely on the isa pointer to determine class membership. Instead, you should use the class method to determine the class of an object instance.")])]),t._v(" "),s("p",[t._v("简单概述下 KVO 的实现：\n当你观察一个对象（称该对象为"),s("strong",[t._v("被观察对象")]),t._v("）时，一个新的类会动态被创建。这个类继承自"),s("strong",[t._v("被观察对象")]),t._v("所对应类的，并重写该被观察属性的 setter 方法；针对 setter 方法的重写无非是在赋值语句前后加上相应的通知（或曰方法调用）；最后，把被观察对象的"),s("code",[t._v("isa")]),t._v("指针（"),s("code",[t._v("isa")]),t._v("指针告诉 Runtime 系统这个对象的类是什么）指向这个新创建的中间类，对象就神奇变成了新创建类的实例。")]),t._v(" "),s("p",[t._v("根据文档的描述，虽然被观察对象的"),s("code",[t._v("isa")]),t._v("指针被修改了，但是调用其"),s("code",[t._v("class")]),t._v("方法得到的类信息仍然是它之前所继承类的类信息，而不是这个新创建类的类信息。")]),t._v(" "),s("p",[t._v("补充：下面对"),s("code",[t._v("isa")]),t._v("指针和类方法"),s("code",[t._v("class")]),t._v("作以更多的说明。")]),t._v(" "),s("p",[s("code",[t._v("isa")]),t._v("指针和类方法"),s("code",[t._v("class")]),t._v("的返回值都是"),s("code",[t._v("Class")]),t._v("类型，如下：")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@interface")]),t._v(" NSObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NSObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Class isa  OBJC_ISA_AVAILABILITY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Class"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("class"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("根据我的理解，一般情况下，"),s("code",[t._v("isa")]),t._v("指针和"),s("code",[t._v("class")]),t._v("方法返回值都是一样的；但 KVO 底层实现时，动态创建的类只是重写了被观察属性的 setter 方法，并未重写类方法"),s("code",[t._v("class")]),t._v("，因此向被观察者发送"),s("code",[t._v("class")]),t._v("消息实际上仍然调用的是被观察者原先类的类方法"),s("code",[t._v("+(Class)class")]),t._v("，得到的类型信息当然是原先类的类信息，根据我的猜测，"),s("code",[t._v("isKindOfClass:")]),t._v("和"),s("code",[t._v("isMemberOfClass:")]),t._v("与"),s("code",[t._v("class")]),t._v("方法紧密相关。")]),t._v(" "),s("p",[t._v("国外的大神 Mike Ash 早在 2009 年就做了关于 KVO 的实现细节的探究，更多详细参考"),s("a",{attrs:{href:"https://www.mikeash.com/pyblog/friday-qa-2009-01-23.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"kvo-的槽点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kvo-的槽点"}},[t._v("#")]),t._v(" KVO 的槽点")]),t._v(" "),s("p",[t._v("AFNetworking 作者 Mattt Thompson 在"),s("a",{attrs:{href:"http://nshipster.com/key-value-observing/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Key-Value Observing"),s("OutboundLink")],1),t._v("中说：")]),t._v(" "),s("blockquote",[s("p",[t._v("Ask anyone who's been around the NSBlock a few times: Key-Value Observing has the worst API in all of Cocoa.")])]),t._v(" "),s("p",[t._v("另一位不认识的大神在"),s("a",{attrs:{href:"http://khanlou.com/2013/12/kvo-considered-harmful/",target:"_blank",rel:"noopener noreferrer"}},[t._v("KVO Considered Harmful"),s("OutboundLink")],1),t._v("中也写道：")]),t._v(" "),s("blockquote",[s("p",[t._v("KVO, or key-value observing, is a pattern that Cocoa provides for us for subscribing to changes to the properties of other objects. It’s hands down the most poorly designed API in all of Cocoa, and even when implemented perfectly, it’s still an incredibly dangerous tool to use, reserved only for when no other technique will suffice.")])]),t._v(" "),s("p",[t._v("总之，两位大神都认为 KVO 的 API 非常差劲！")]),t._v(" "),s("p",[t._v("其中"),s("a",{attrs:{href:"http://khanlou.com/2013/12/kvo-considered-harmful/",target:"_blank",rel:"noopener noreferrer"}},[t._v("KVO Considered Harmful"),s("OutboundLink")],1),t._v("中对 KVO 的槽点有比较详细的阐述，这一部分内容就取材于此。")]),t._v(" "),s("p",[t._v("为了更好说明这些槽点，假设一个应用场景："),s("code",[t._v("ZWTableViewController")]),t._v("继承自"),s("code",[t._v("UITableViewController")]),t._v("，它现在需要做一件事情，即监测"),s("code",[t._v("self.tableView.contentSize")]),t._v("的变化，现采用典型的方式（即 KVO）处理这么个需求。")]),t._v(" "),s("p",[s("strong",[t._v("所有的 observe 处理都放在一个方法里")])]),t._v(" "),s("p",[t._v("实现上述「监测"),s("code",[t._v("self.tableView.contentSize")]),t._v("的变化」的需求，最基本处理方式是：")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// register observer")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("viewDidLoad "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),t._v(" viewDidLoad"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("_tableView addObserver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" forKeyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"contentSize"')]),t._v(" options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ... */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理observe")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("observeValueForKeyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("keyPath\n                      ofObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("object\n                        change"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSDictionary "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("change\n                       context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("context "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" configureView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("但考虑到"),s("code",[t._v("observeValueForKeyPath:ofObject:change:context:")]),t._v("中可能会很多其他的 observe 事务，所以"),s("code",[t._v("observeValueForKeyPath:ofObject:change:context:")]),t._v("更好的逻辑是：")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("observeValueForKeyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("keyPath\n                      ofObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("object\n                        change"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSDictionary "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("change\n                       context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("context "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("object "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" _tableView "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("keyPath isEqualToString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"contentSize"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" configureView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("但如果 KVO 处理的事情种类多且繁杂，这会造成"),s("code",[t._v("observeValueForKeyPath:ofObject:change:context:")]),t._v("代码特别长，极不优雅。")]),t._v(" "),s("p",[s("strong",[t._v("严重依赖于 string")])]),t._v(" "),s("p",[t._v("KVO 严重依赖 string，换句话说，KVO 中的 keyPath 必须是"),s("code",[t._v("NSString")]),t._v("这个事实使得编译器没办法在编译阶段将错误的 keyPath 给找出来；譬如很容易将「contentSize」写成「contentsize」；")]),t._v(" "),s("p",[s("strong",[t._v("需要自己处理 superclass 的 observe 事务")])]),t._v(" "),s("p",[t._v("对于 Objective-C，很多时候 Runtime 系统都会自动帮助处理 superclass 的方法。譬如对于"),s("code",[t._v("dealloc")]),t._v("，假设类"),s("code",[t._v("Father")]),t._v("继承自"),s("code",[t._v("NSObject")]),t._v("，而类"),s("code",[t._v("Son")]),t._v("继承自"),s("code",[t._v("Father")]),t._v("，创建一个"),s("code",[t._v("Son")]),t._v("的实例"),s("code",[t._v("aSon")]),t._v("，在"),s("code",[t._v("aSon")]),t._v("被释放的时候，Runtime 会先调用"),s("code",[t._v("Son#dealloc")]),t._v("，之后会自动调用"),s("code",[t._v("Father#dealloc")]),t._v("，而无需在"),s("code",[t._v("Son#dealloc")]),t._v("中显式执行"),s("code",[t._v("[super dealloc];")]),t._v("。但 KVO 不会这样，所以为了保证父类（父类可能也会自己 observe 事务要处理）的 observe 事务也能被处理，上述"),s("code",[t._v("observeValueForKeyPath:ofObject:change:context:")]),t._v("代码得改成这样：")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("observeValueForKeyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("keyPath\n                      ofObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("object\n                        change"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSDictionary "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("change\n                       context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("context "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("object "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" _tableView "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("keyPath isEqualToString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"contentSize"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" configureView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),t._v(" observeValueForKeyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("keyPath ofObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("object change"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("change context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("strong",[t._v("多次相同的 remove observer 会导致 crash")])]),t._v(" "),s("p",[t._v("写过 KVO 代码的人都知道，对同一个对象执行两次 remove observer 操作会导致程序 crash。")]),t._v(" "),s("p",[t._v("在同一个文件中执行两次相同的 remove observer 属于粗心，比较容易 debug 出来；但是跨文件执行两次相同的 remove observer 就不是那么容易发现了。")]),t._v(" "),s("p",[t._v("我们一般会在"),s("code",[t._v("dealloc")]),t._v("中进行 remove observer 操作（这也是 Apple 所推荐的）。")]),t._v(" "),s("p",[t._v("譬如，假设上述的"),s("code",[t._v("ZWTableViewController")]),t._v("的父类"),s("code",[t._v("UITableViewController")]),t._v("也对"),s("code",[t._v("tableView.contentSize")]),t._v("注册了相同的监听；那么"),s("code",[t._v("UITableViewController#dealloc")]),t._v("中常常会写出如下这样的代码：")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("_tableView removeObserver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" forKeyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"contentSize"')]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("按照一般习惯，"),s("code",[t._v("ZWTableViewController#dealloc")]),t._v("也会有相同的处理；那么当"),s("code",[t._v("ZWTableViewController")]),t._v("对象被释放时，"),s("code",[t._v("ZWTableViewController")]),t._v("的"),s("code",[t._v("dealloc")]),t._v("和其父类"),s("code",[t._v("UITableViewController")]),t._v("的"),s("code",[t._v("dealloc")]),t._v("都被调用，这样会导致相同的 remove observer 被执行两次，自然会导致 crash。")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://khanlou.com/2013/12/kvo-considered-harmful/",target:"_blank",rel:"noopener noreferrer"}},[t._v("KVO Considered Harmful"),s("OutboundLink")],1),t._v("中还有很多其他的槽点，"),s("a",{attrs:{href:"https://www.mikeash.com/pyblog/key-value-observing-done-right.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Key-Value Observing Done Right"),s("OutboundLink")],1),t._v("也描述了一些，这里就不多说了，更多信息还是建议看原文。")]),t._v(" "),s("p",[t._v("不过好在上述的槽点「严重依赖于 string」和「多次相同的 remove observer 会导致 crash」有比较好的解决方案，如下会讲到。")]),t._v(" "),s("h2",{attrs:{id:"使用-kvo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-kvo"}},[t._v("#")]),t._v(" 使用 KVO")]),t._v(" "),s("p",[t._v("这一部分将阐述 KVO 的使用方法。")]),t._v(" "),s("h3",{attrs:{id:"订阅"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#订阅"}},[t._v("#")]),t._v(" 订阅")]),t._v(" "),s("p",[t._v("KVO 中与订阅相关的 API 只有一个：")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("addObserver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("observer\n         forKeyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("keyPath\n            options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSKeyValueObservingOptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("options\n            context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("对于这四个参数：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("observer")]),t._v(": The object to register for KVO notifications. The observer must implement the key-value observing method "),s("code",[t._v("observeValueForKeyPath:ofObject:change:context:")]),t._v(".")]),t._v(" "),s("li",[s("strong",[t._v("keyPath")]),t._v(": The key path, relative to the receiver, of the property to observe. This value must not be nil.")]),t._v(" "),s("li",[s("strong",[t._v("options")]),t._v(": A combination of the NSKeyValueObservingOptions values that specifies what is included in observation notifications. For possible values, see "),s("code",[t._v("NSKeyValueObservingOptions")]),t._v(".")]),t._v(" "),s("li",[s("strong",[t._v("context")]),t._v(": Arbitrary data that is passed to observer in "),s("code",[t._v("observeValueForKeyPath:ofObject:change:context:")]),t._v(".")])]),t._v(" "),s("p",[t._v("大神们认为这个 API 丑陋的重要原因是因为后面两个参数：options 和 context。")]),t._v(" "),s("p",[t._v("下面来对这两个参数进行详细介绍。")]),t._v(" "),s("p",[t._v("首先是"),s("strong",[t._v("options")]),t._v("。options 可选值是一个"),s("code",[t._v("NSKeyValueObservingOptions")]),t._v("枚举值，到目前为止，一共包括四个值，在介绍这四个值各自表示的意思之前，先得有一个概念，即 KVO 响应方法有一个"),s("code",[t._v("NSDictionary")]),t._v("类型参数 change（下面"),s("strong",[t._v("响应")]),t._v("中可以看到），这个字典中会有一个与被监听属性相关的值，譬如被改变之前的值、新值等，"),s("code",[t._v("NSDictionary")]),t._v("中有啥值由订阅时的 options 值决定，options 可取值如下：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("NSKeyValueObservingOptionNew")]),t._v(": 指示 change 字典中包含新属性值；")]),t._v(" "),s("li",[s("code",[t._v("NSKeyValueObservingOptionOld")]),t._v(": 指示 change 字典中包含旧属性值；")]),t._v(" "),s("li",[s("code",[t._v("NSKeyValueObservingOptionInitial")]),t._v(": 相对复杂一些，NSKeyValueObserving.h 文件中有详细说明，此处略过；")]),t._v(" "),s("li",[s("code",[t._v("NSKeyValueObservingOptionPrior")]),t._v(": 相对复杂一些，NSKeyValueObserving.h 文件中有详细说明，此处略过；")])]),t._v(" "),s("p",[t._v("现在细想，options 这个参数也忒复杂了，难怪大神们觉得这个 API 丑陋（不过我等小民之前从未想过这个问题，=_=，没办法，Apple 是个大帝国，我只是其中一个跪舔的小屁民）。")]),t._v(" "),s("p",[t._v("不过更糟心的是下面的 context 参数。")]),t._v(" "),s("p",[t._v("options 信息量稍大，但其实蛮好理解的，然而对于 context，在写这篇博客之前，一直不知道 context 参数有啥用（也没在意）。")]),t._v(" "),s("p",[t._v("context 作用大了去了，在上面的"),s("strong",[t._v("KVO 的槽点")]),t._v("中提到一个槽点「多次相同的 remove observer 会导致 crash」。导致「多次调用相同的 remove observer」一个很重要的原因是我们经常在 add observer 时为 context 参数赋值"),s("code",[t._v("NULL")]),t._v("，关于如何使用 context 参数，下面会提到。")]),t._v(" "),s("h3",{attrs:{id:"响应"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#响应"}},[t._v("#")]),t._v(" 响应")]),t._v(" "),s("p",[t._v("iOS 的 UI 交互（譬如"),s("code",[t._v("UIButton")]),t._v("的一次点击）有一个非常不错的消息转发机制 -- Target-Action 模型，简单来说，为指定的 event 指定 target 和 action 处理方法。")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("UIButton "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("button "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("UIButton new"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("button addTarget"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" action"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buttonDidClicked"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" forControlEvents"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("UIControlEventTouchUpInside"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("这种 target-action 模型逻辑非常清晰。作为对比，KVO 的响应处理就非常糟糕了，所有的响应都对应是同一个方法"),s("code",[t._v("observeValueForKeyPath:ofObject:change:context:")]),t._v("，其原型如下：")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("observeValueForKeyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("keyPath\n                      ofObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("object\n                        change"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSDictionary "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("change\n                       context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("除了"),s("code",[t._v("NSDictionary")]),t._v("类型参数 change 之外，其余几个参数都能在"),s("code",[t._v("addObserver:forKeyPath:options:context:")]),t._v("找到对应。")]),t._v(" "),s("p",[t._v("change 参数上文已经讲过了，这里不多说了。下面将针对「严重依赖于 string」和「多次相同的 remove observer 会导致 crash」这两个槽点对 keyPath 和 context 参数进行阐述。")]),t._v(" "),s("p",[s("strong",[t._v("keyPath")]),t._v("。keyPath 的类型是"),s("code",[t._v("NSString")]),t._v("，这导致了我们使用了错误的 keyPath 而不自知，譬如将"),s("code",[t._v('@"contentSize"')]),t._v("错误写成"),s("code",[t._v('@"contentsize"')]),t._v("，一个更好的方法是不直接使用"),s("code",[t._v('@"xxxoo"')]),t._v("，而是积极使用"),s("code",[t._v("NSStringFromSelector(SEL aSelector)")]),t._v("方法，即改"),s("code",[t._v('@"contentSize"')]),t._v("为"),s("code",[t._v("NSStringFromSelector(@selector(contentSize))")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("context")]),t._v("。对于 context，上文已经提到一种场景：假如父类（设为"),s("code",[t._v("ClassA")]),t._v("）和子类（设为"),s("code",[t._v("ClassB")]),t._v("）都监听了同一个对象肿么办？是"),s("code",[t._v("ClassB")]),t._v("处理呢还是交给父类"),s("code",[t._v("ClassA")]),t._v("的"),s("code",[t._v("observeValueForKeyPath:ofObject:change:context:")]),t._v("处理呢？更复杂一点，如果子类的子类（设为"),s("code",[t._v("ClassC")]),t._v("）也监听了同一个对象，当"),s("code",[t._v("ClassB")]),t._v("接收到"),s("code",[t._v("ClassC")]),t._v("的"),s("code",[t._v("[super observeValueForKeyPath:keyPath ofObject:object change:change context:context];")]),t._v("消息时又该如何处理呢？")]),t._v(" "),s("p",[t._v("这么一想，KVO 的 API 还真的是设计非常糟糕。一般来说，比较靠谱的做法是自己的屁股自己擦。"),s("code",[t._v("ClassB")]),t._v("的 observe 事务在"),s("code",[t._v("ClassB")]),t._v("中处理，怎么知道是自己的事务还是"),s("code",[t._v("ClassC")]),t._v("传上来的事务呢？用 context 参数判断！")]),t._v(" "),s("p",[t._v("在 add observer 时为 context 参数设置一个独一无二的值即可，在 responding 处理时对这个 context 值进行检验。如此就解决了问题，但这需要靠用户（各个层级类的程序员用户）自觉遵守。")]),t._v(" "),s("h3",{attrs:{id:"取消订阅"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#取消订阅"}},[t._v("#")]),t._v(" 取消订阅")]),t._v(" "),s("p",[t._v("和"),s("strong",[t._v("订阅")]),t._v("以及"),s("strong",[t._v("响应")]),t._v("不同，取消订阅有两个方法：")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("removeObserver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("observer forKeyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("keyPath context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("removeObserver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSObject "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("observer forKeyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("keyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("个人觉得应该尽可能使用第一个方法，保持「订阅-响应-取消订阅」的一致性嘛，养成好习惯！")]),t._v(" "),s("p",[t._v("此外，为了避免取消订阅时造成的 crash，可以把取消订阅代码放在"),s("code",[t._v("@try-@catch")]),t._v("语句中，如下是一个比较全面的的 KVO 使用示例：")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" zwContentSize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("zwContentSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("viewDidLoad "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),t._v(" viewDidLoad"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. subscribe")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("_tableView addObserver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v("\n                 forKeyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSStringFromSelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("contentSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("NSKeyValueObservingOptionNew\n                    context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("zwContentSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. responding")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("observeValueForKeyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("keyPath\n                      ofObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("object\n                        change"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSDictionary "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("change\n                       context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("context "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" zwContentSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// configure view")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),t._v(" observeValueForKeyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("keyPath ofObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("object change"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("change context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("dealloc "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. unsubscribe")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("_tableView removeObserver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v("\n                        forKeyPath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSStringFromSelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("contentSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                           context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("zwContentSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSException "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("exception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("总之，KVO 很强大，但也挺坑，使用它要养成好习惯，避免入坑！")]),t._v(" "),s("h2",{attrs:{id:"本文参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本文参考"}},[t._v("#")]),t._v(" 本文参考")]),t._v(" "),s("ul",[s("li",[t._v("《Key-Value Observing Programming Guide》")]),t._v(" "),s("li",[s("a",{attrs:{href:"http://tech.glowing.com/cn/implement-kvo/",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何自己动手实现 KVO"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.mikeash.com/pyblog/friday-qa-2009-01-23.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("KVO Implementation"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.mikeash.com/pyblog/friday-qa-2010-11-6-creating-classes-at-runtime-in-objective-c.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Creating Classes at Runtime in Objective-C"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.mikeash.com/pyblog/key-value-observing-done-right.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Key-Value Observing Done Right"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://khanlou.com/2013/12/kvo-considered-harmful/",target:"_blank",rel:"noopener noreferrer"}},[t._v("KVO Considered Harmful"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://nshipster.com/key-value-observing/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Key-Value Observing"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://objccn.io/issue-7-3/",target:"_blank",rel:"noopener noreferrer"}},[t._v("KVC 和 KVO"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=n.exports}}]);