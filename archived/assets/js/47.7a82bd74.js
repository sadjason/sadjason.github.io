(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{117:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("参考：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://km.sankuai.com/page/22197915",target:"_blank",rel:"noopener noreferrer"}},[t._v("iOS 多线程编程总结和梳理"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.im/post/5a90de68f265da4e9b592b40",target:"_blank",rel:"noopener noreferrer"}},[t._v("iOS 多线程: GCD 详尽总结"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://juejin.im/post/5c761b58f265da2d89633da3",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解 GCD 之 dispatch_queue"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://bestswifter.com/deep-gcd/",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解 GCD"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("常见问题：")]),t._v(" "),s("ul",[s("li",[t._v("什么是线程安全？")]),t._v(" "),s("li",[t._v("什么情况下会发生死锁？")]),t._v(" "),s("li",[t._v("死锁的 4 个必要条件")]),t._v(" "),s("li",[t._v("进程通信的方案有哪些？")]),t._v(" "),s("li",[t._v("iOS App 之间通信的手段有哪些？")]),t._v(" "),s("li",[t._v("线程同步手段有哪些？")]),t._v(" "),s("li",[t._v("优先级反转是什么？")]),t._v(" "),s("li",[t._v("如何看待 GCD？")]),t._v(" "),s("li",[t._v("NSOperation 和 GCD 对比有啥区别？")]),t._v(" "),s("li",[t._v("⼀个⻚⾯需要请求三个⽹络请求，需要在三个⽹络请求都返回的时候刷新界⾯")]),t._v(" "),s("li",[t._v("实现⼀个线程安全的 NSMutableArray 的读和写")]),t._v(" "),s("li",[t._v("编写⼀个多线程下载器，可以执⾏多个下载任务，每个任务可以保存当下下载字节数，总字节数，可以设置回调得到当前下载进度")]),t._v(" "),s("li",[t._v("需要在主线程等待⼀个异步任务返回，才能继续执⾏下⾯的逻辑，但是⼜不希望堵塞⽤户事件")]),t._v(" "),s("li",[t._v("串行队列的任务是在一个单独线程执行的，如果我们⽣成 10 个串行队列，系统会创建 10 个线程么，如果⽣生成 100 个串⾏队列列呢?")]),t._v(" "),s("li",[t._v("dispatch_group 是如何实现的？")]),t._v(" "),s("li",[t._v("dispatch_apply 的优点是啥？")]),t._v(" "),s("li",[t._v("dispatch_after 是延迟提交，还是延迟运行？")]),t._v(" "),s("li",[t._v("GCD 都是提供的 C 级别的 API，既可以使⽤用 block 也可以使⽤用 C 函数指针，这两种⽅方式有什什么区别？或者说 block 和 C 的函数指针有什什么区别?")]),t._v(" "),s("li",[t._v("@synchronized 是如何根据你传⼊的对象生成锁和加锁的？")])]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#进程"}},[t._v("进程")]),s("ul",[s("li",[s("a",{attrs:{href:"#创建子进程的方式"}},[t._v("创建子进程的方式")])]),s("li",[s("a",{attrs:{href:"#进程的通信方式"}},[t._v("进程的通信方式")])]),s("li",[s("a",{attrs:{href:"#ios-进程通信"}},[t._v("iOS 进程通信")])]),s("li",[s("a",{attrs:{href:"#僵尸进程-孤儿进程"}},[t._v("僵尸进程 & 孤儿进程")])])])]),s("li",[s("a",{attrs:{href:"#nsthread"}},[t._v("NSThread")]),s("ul",[s("li",[s("a",{attrs:{href:"#配置-nsthread"}},[t._v("配置 NSThread")])])])]),s("li",[s("a",{attrs:{href:"#线程通信-线程同步"}},[t._v("线程通信 & 线程同步")])]),s("li",[s("a",{attrs:{href:"#gcd-队列相关"}},[t._v("GCD: 队列相关")])]),s("li",[s("a",{attrs:{href:"#gcd-执行任务"}},[t._v("GCD: 执行任务")])]),s("li",[s("a",{attrs:{href:"#gcd-同步-异步派发、串行-并行队列混谈"}},[t._v("GCD: 同步/异步派发、串行/并行队列混谈")]),s("ul",[s("li",[s("a",{attrs:{href:"#同步派发-串行队列"}},[t._v("同步派发+串行队列")])]),s("li",[s("a",{attrs:{href:"#同步派发-并行队列"}},[t._v("同步派发+并行队列")])]),s("li",[s("a",{attrs:{href:"#异步派发-串行队列"}},[t._v("异步派发+串行队列")])]),s("li",[s("a",{attrs:{href:"#异步执行-并发队列"}},[t._v("异步执行+并发队列")])])])]),s("li",[s("a",{attrs:{href:"#gcd-信号量-semaphore"}},[t._v("GCD: 信号量 (Semaphore)")]),s("ul",[s("li",[s("a",{attrs:{href:"#基于信号量的线程同步"}},[t._v("基于信号量的线程同步")])]),s("li",[s("a",{attrs:{href:"#基于信号量的互斥锁"}},[t._v("基于信号量的互斥锁")])]),s("li",[s("a",{attrs:{href:"#基于信号量的读写锁实现"}},[t._v("基于信号量的读写锁实现")])])])]),s("li",[s("a",{attrs:{href:"#gcd-dispatch-groups"}},[t._v("GCD: Dispatch Groups")])]),s("li",[s("a",{attrs:{href:"#gcd-barriers"}},[t._v("GCD: Barriers")]),s("ul",[s("li",[s("a",{attrs:{href:"#dispatch-barrier"}},[t._v("dispatch_barrier")])]),s("li",[s("a",{attrs:{href:"#barrier-block"}},[t._v("Barrier Block")])])])]),s("li",[s("a",{attrs:{href:"#gcd-基本概念"}},[t._v("GCD: 基本概念")]),s("ul",[s("li",[s("a",{attrs:{href:"#串行-v-s-并行（serial-v-s-concurrent）"}},[t._v("串行 v.s 并行（serial v.s concurrent）")])]),s("li",[s("a",{attrs:{href:"#同步-v-s-异步（synchronous-v-s-asynchronous）"}},[t._v("同步 v.s 异步（synchronous v.s asynchronous）")])]),s("li",[s("a",{attrs:{href:"#并发-v-s-并行（concurrency-v-s-paralleism）"}},[t._v("并发 v.s 并行（concurrency v.s paralleism）")])]),s("li",[s("a",{attrs:{href:"#死锁（deadlock"}},[t._v("死锁（deadlock)")])]),s("li",[s("a",{attrs:{href:"#临界区（critical-section）"}},[t._v("临界区（critical section）")])]),s("li",[s("a",{attrs:{href:"#竞态条件（race-condition）"}},[t._v("竞态条件（race condition）")])]),s("li",[s("a",{attrs:{href:"#线程安全（thread-safe）"}},[t._v("线程安全（thread safe）")])]),s("li",[s("a",{attrs:{href:"#上下文切换（context-switch）"}},[t._v("上下文切换（context switch）")])]),s("li",[s("a",{attrs:{href:"#优先级反转（priority-inversion）"}},[t._v("优先级反转（priority inversion）")])]),s("li",[s("a",{attrs:{href:"#dispatch-block"}},[t._v("dispatch block")])]),s("li",[s("a",{attrs:{href:"#dispatch-io"}},[t._v("dispatch IO")])]),s("li",[s("a",{attrs:{href:"#dispatch-source"}},[t._v("dispatch source")])]),s("li",[s("a",{attrs:{href:"#dispatch-object"}},[t._v("dispatch object")])]),s("li",[s("a",{attrs:{href:"#runloop-与多线程"}},[t._v("Runloop 与多线程")])])])]),s("li",[s("a",{attrs:{href:"#常见相关问题"}},[t._v("常见相关问题")]),s("ul",[s("li",[s("a",{attrs:{href:"#如何看待-gcd"}},[t._v("如何看待 GCD")])]),s("li",[s("a",{attrs:{href:"#为什么⼏乎所有的gui框架都是单线程的？"}},[t._v("为什么⼏乎所有的GUI框架都是单线程的？")])])])]),s("li",[s("a",{attrs:{href:"#典型场景"}},[t._v("典型场景")]),s("ul",[s("li",[s("a",{attrs:{href:"#网络请求聚合"}},[t._v("网络请求聚合")])]),s("li",[s("a",{attrs:{href:"#实现线程安全的-nsmutablearray"}},[t._v("实现线程安全的 NSMutableArray")])]),s("li",[s("a",{attrs:{href:"#多线程下载器"}},[t._v("多线程下载器")])]),s("li",[s("a",{attrs:{href:"#阻塞主线程"}},[t._v("阻塞主线程")])]),s("li",[s("a",{attrs:{href:"#dispatch-after-是延迟提交，还是延迟运行"}},[t._v("dispatch_after 是延迟提交，还是延迟运行")])])])]),s("li",[s("a",{attrs:{href:"#nsoperation"}},[t._v("NSOperation")])]),s("li",[s("a",{attrs:{href:"#死锁"}},[t._v("死锁")]),s("ul",[s("li",[s("a",{attrs:{href:"#死锁的-4-个条件"}},[t._v("死锁的 4 个条件")])])])])])]),s("p"),t._v(" "),s("h1",{attrs:{id:"进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进程"}},[t._v("#")]),t._v(" 进程")]),t._v(" "),s("h2",{attrs:{id:"创建子进程的方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建子进程的方式"}},[t._v("#")]),t._v(" 创建子进程的方式")]),t._v(" "),s("ul",[s("li",[t._v("fork: 创建子进程，和父进程具有相同但独立的地址空间")]),t._v(" "),s("li",[t._v("exec: 用被执行的程序替换调用它的程序，与fork相比，fork创建一个新的进程，产生一个新的PID，exec启动一个新的程序替换当前的进程PID不变")]),t._v(" "),s("li",[t._v("clone: 貌似主要用于创建线程")])]),t._v(" "),s("h2",{attrs:{id:"进程的通信方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进程的通信方式"}},[t._v("#")]),t._v(" 进程的通信方式")]),t._v(" "),s("ul",[s("li",[t._v("管道")]),t._v(" "),s("li",[t._v("消息队列（message queue）：消息队列是由消息的链表，存放在内核中并由消息队列标识符标识。")]),t._v(" "),s("li",[t._v("信号量（semophore）：信号量是一个计数器，可以用来控制多个进程对共享资源的访问")]),t._v(" "),s("li",[t._v("信号（signal）：信号是一种比较复杂的通信方式，用于通知接收进程某个事件已经发生")]),t._v(" "),s("li",[t._v("共享内存：共享内存就是映射一段能被其他进程所访问的内存，这段共享内存由一个进程创建，但多个进程都可以访问")]),t._v(" "),s("li",[t._v("套接字：套接口也是一种进程间通信机制，与其他通信机制不同的是，它可用于不同机器间的进程通信")])]),t._v(" "),s("h2",{attrs:{id:"ios-进程通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ios-进程通信"}},[t._v("#")]),t._v(" iOS 进程通信")]),t._v(" "),s("ul",[s("li",[t._v("URL Scheme: App 之间跳转")]),t._v(" "),s("li",[t._v("Keychain: 多个 App 共享登录账号")]),t._v(" "),s("li",[t._v("Pasteboard")]),t._v(" "),s("li",[t._v("MachPort")]),t._v(" "),s("li",[t._v("XPC")])]),t._v(" "),s("p",[t._v("详见"),s("a",{attrs:{href:"https://nshipster.com/inter-process-communication/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Inter-Process Communication"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"僵尸进程-孤儿进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#僵尸进程-孤儿进程"}},[t._v("#")]),t._v(" 僵尸进程 & 孤儿进程")]),t._v(" "),s("p",[t._v("什么是僵尸进程？")]),t._v(" "),s("p",[t._v("当一个进程完成它的工作终止之后，它的父进程需要调用"),s("code",[t._v("wait()")]),t._v("或者"),s("code",[t._v("waitpid()")]),t._v("系统调用取得子进程的终止状态。如果父进程没有这么做的话，会产生什么后果呢？此时，子进程虽然已经退出了，但是在系统进程表中还为它保留了一些退出状态的信息，如果父进程一直不取得这些退出信息的话，这些进程表项就将一直被占用，此时，这些占着茅坑不拉屎的子进程就成为僵尸（zombie）进程。")]),t._v(" "),s("p",[t._v("什么是孤儿进程？")]),t._v(" "),s("p",[t._v("在进程还未退出之前，它的父进程就已经退出了，一个没有了父进程的子进程就是一个孤儿（orphan）进程。")]),t._v(" "),s("p",[t._v("既然所有进程都必须在退出之后被"),s("code",[t._v("wait()")]),t._v("或"),s("code",[t._v("waitpid()")]),t._v("以释放其遗留在系统中的一些资源，那么应该由谁来处理孤儿进程的善后事宜呢？这个重任就落到了 init 程身上，init进程就好像是一个民政局，专门负责处理孤儿进程的善后工作。每当出现一个孤儿进程的时候，内核就把孤儿进程的父进程设置为 init，而 init 进程会循环地 wait() 它的已经退出的子进程。这样，当一个孤儿进程凄凉地结束了其生命周期的时候，init 进程就会代表党和政府出面处理它的一切善后工作。")]),t._v(" "),s("p",[t._v("孤儿进程并不会有什么危害，真正会对系统构成威胁的是僵尸进程。")]),t._v(" "),s("p",[t._v("严格地来说，僵尸进程并不是问题的根源，罪魁祸首是产生出大量僵尸进程的那个父进程。")]),t._v(" "),s("p",[t._v("因此，当我们寻求如何消灭系统中大量的僵尸进程时，答案就是把产生大量僵尸进程的那个元凶枪毙掉（通过 kill 发送"),s("code",[t._v("SIGTERM")]),t._v("或者"),s("code",[t._v("SIGKILL")]),t._v("信号）；子进程就变成了孤儿进程，收留它的是 init 进程，它可是一位好爹，会替前者收尸的。")]),t._v(" "),s("h1",{attrs:{id:"nsthread"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nsthread"}},[t._v("#")]),t._v(" NSThread")]),t._v(" "),s("p",[t._v("NSThread 是 GCD 和 NSOperation 出现之前的多线程编程唯一选择（除非使用 pthread）。")]),t._v(" "),s("h2",{attrs:{id:"配置-nsthread"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-nsthread"}},[t._v("#")]),t._v(" 配置 NSThread")]),t._v(" "),s("p",[s("code",[t._v("NSThread")]),t._v("可配置项包括：")]),t._v(" "),s("ul",[s("li",[t._v("设置线程的栈大小，setStackSize")]),t._v(" "),s("li",[t._v("设置线程本地变量，threadDictionary")]),t._v(" "),s("li",[t._v("设置线程优先级，setThreadPriority，0.0 ~ 1.0")])]),t._v(" "),s("p",[t._v("根据张杰的说法，main thread 的 stackSize 默认为 1MB，其他 thread 的stackSize 默认为 512KB。如果超过了 stackSize，则会触发栈溢出错误。")]),t._v(" "),s("h1",{attrs:{id:"线程通信-线程同步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程通信-线程同步"}},[t._v("#")]),t._v(" 线程通信 & 线程同步")]),t._v(" "),s("p",[t._v("线程通信的手段包括：")]),t._v(" "),s("ul",[s("li",[t._v("直接通信："),s("code",[t._v("performSelector:onThread:withObject:")]),t._v("是也。")]),t._v(" "),s("li",[t._v("条件变量")]),t._v(" "),s("li",[t._v("全局变量，共享内存")]),t._v(" "),s("li",[t._v("Run loop sources")]),t._v(" "),s("li",[t._v("等等")])]),t._v(" "),s("p",[t._v("线程同步的手段包括：")]),t._v(" "),s("ul",[s("li",[t._v("Atomic Operations:")]),t._v(" "),s("li",[t._v("Locks")]),t._v(" "),s("li",[t._v("Conditions")]),t._v(" "),s("li",[t._v("Synchronized: 也是基于锁来实现的。\n"),s("ul",[s("li",[t._v("只有传同一个对象，才能起到加锁的作用")]),t._v(" "),s("li",[t._v("传"),s("code",[t._v("nil")]),t._v("是无法起到加锁作用的")]),t._v(" "),s("li",[t._v("可以重入（基于递归锁实现）")]),t._v(" "),s("li",[t._v("不会持有传给它的对象，即便在 @synchronized 中 destory 这个对象也是没问题的。")]),t._v(" "),s("li",[t._v("内部有异常处理，不会担心异常产生的时候不会 unlock")]),t._v(" "),s("li",[t._v("还是挺推荐使用的")])])]),t._v(" "),s("li",[t._v("等等")])]),t._v(" "),s("h1",{attrs:{id:"gcd-队列相关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gcd-队列相关"}},[t._v("#")]),t._v(" GCD: 队列相关")]),t._v(" "),s("e-img",{attrs:{src:"/image/draft/gcd-queues.png"}}),t._v(" "),s("p",[t._v("队列相关 API 包括：")]),t._v(" "),s("ul",[s("li",[t._v("dispatch_get_main_queue")]),t._v(" "),s("li",[t._v("dispatch_get_global_queue")]),t._v(" "),s("li",[t._v("dispatch_queue_create")]),t._v(" "),s("li",[t._v("dispatch_get_current_queue")]),t._v(" "),s("li",[t._v("dispatch_queue_get_label")]),t._v(" "),s("li",[t._v("dispatch_set_target_queue")])]),t._v(" "),s("p",[t._v("其中，相对较陌生的 API 是"),s("code",[t._v("dispatch_set_target_queue")]),t._v("，使用说明如下：")]),t._v(" "),s("ul",[s("li",[t._v("如果一个 queue 被创建时没有指定优先级，那么它的优先级将继承自它的 targetQueue")]),t._v(" "),s("li",[t._v("两个基本用法\n"),s("ul",[s("li",[t._v("指定优先级")]),t._v(" "),s("li",[t._v("队列执行")])])])]),t._v(" "),s("p",[t._v("Q: 如果并行队列 cQueue1、cQueue2 的目标队列设置为同一个串行队列，其中的 block 会如何执行呢？")]),t._v(" "),s("p",[t._v("A: 其一，cQueue1 的 block 执行完毕了，cQueue2 的 block 才执行；其二，cQueue1 和 cQueue2 中的 block 都是串行执行的。简而言之，无论是 queue 还是 queue 中的 block，都是串行执行的。")]),t._v(" "),s("h1",{attrs:{id:"gcd-执行任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gcd-执行任务"}},[t._v("#")]),t._v(" GCD: 执行任务")]),t._v(" "),s("p",[t._v("GCD 任务执行相关 API:")]),t._v(" "),s("ul",[s("li",[t._v("dispatch_async")]),t._v(" "),s("li",[t._v("dispatch_sync")]),t._v(" "),s("li",[t._v("dispatch_after")]),t._v(" "),s("li",[t._v("dispatch_once")]),t._v(" "),s("li",[t._v("dispatch_apply")])]),t._v(" "),s("p",[t._v("对"),s("code",[t._v("dispatch_apply")]),t._v("相对较陌生，其基本使用姿势如下：")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("dispatch_queue_t concurrentQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_queue_create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.starming.gcddemo.concurrentqueue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("DISPATCH_QUEUE_CONCURRENT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//有问题的情况，可能会死锁")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("999")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("concurrentQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"wrong %d"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//do something hard")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//会优化很多，能够利用GCD管理")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("999")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" concurrentQueue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size_t i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"correct %zu"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//do something hard")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("特别需要提醒的是，dispatch_apply 是同步的。所以经常的操作是异步执行 dispatch_apply，然后再异步切回来。")]),t._v(" "),s("h1",{attrs:{id:"gcd-同步-异步派发、串行-并行队列混谈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gcd-同步-异步派发、串行-并行队列混谈"}},[t._v("#")]),t._v(" GCD: 同步/异步派发、串行/并行队列混谈")]),t._v(" "),s("p",[t._v("这一部分内容参考自："),s("a",{attrs:{href:"https://juejin.im/post/5a90de68f265da4e9b592b40",target:"_blank",rel:"noopener noreferrer"}},[t._v("iOS多线程：GCD 详尽总结"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"同步派发-串行队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步派发-串行队列"}},[t._v("#")]),t._v(" 同步派发+串行队列")]),t._v(" "),s("p",[t._v("不会开启新线程，在当前线程执行任务。任务是串行的，执行完一个任务，再执行下一个任务")]),t._v(" "),s("h2",{attrs:{id:"同步派发-并行队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步派发-并行队列"}},[t._v("#")]),t._v(" 同步派发+并行队列")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("dispatch_queue_t queue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_queue_create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.zhangbuhuai"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DISPATCH_QUEUE_CONCURRENT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_sync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 任务一")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_sync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 任务二")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_sync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 任务三")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("所有任务都是在当前线程（主线程）中执行的，没有开启新的线程（同步执行不具备开启新线程的能力）。")]),t._v(" "),s("li",[t._v("任务是按顺序执行的（没有开启新线程）")])]),t._v(" "),s("h2",{attrs:{id:"异步派发-串行队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步派发-串行队列"}},[t._v("#")]),t._v(" 异步派发+串行队列")]),t._v(" "),s("p",[t._v("会开启新线程，但是因为任务是串行的，执行完一个任务，再执行下一个任务。")]),t._v(" "),s("blockquote",[s("p",[t._v("对于会开启新线程，根据我的理解，它不是绝对的；因为线程池在底层维护，可能有空闲的线程可以使用；但是如果开启新线程，则最多会创建一条新线程。")])]),t._v(" "),s("h2",{attrs:{id:"异步执行-并发队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步执行-并发队列"}},[t._v("#")]),t._v(" 异步执行+并发队列")]),t._v(" "),s("p",[t._v("可以开启多个线程，任务交替（同时）执行。")]),t._v(" "),s("h1",{attrs:{id:"gcd-信号量-semaphore"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gcd-信号量-semaphore"}},[t._v("#")]),t._v(" GCD: 信号量 (Semaphore)")]),t._v(" "),s("p",[t._v("GCD 中的信号量是指 Dispatch Semaphore，是持有计数的信号。类似于过高速路收费站的栏杆。可以通过时，打开栏杆，不可以通过时，关闭栏杆。在 Dispatch Semaphore 中，使用计数来完成这个功能，计数为0时等待，不可通过。计数为1或大于1时，计数减1且不等待，可通过。")]),t._v(" "),s("p",[t._v("Dispatch Semaphore 提供了三个函数：")]),t._v(" "),s("ul",[s("li",[t._v("dispatch_semaphore_create: 创建一个 Semaphore 并初始化信号的总量")]),t._v(" "),s("li",[t._v("dispatch_semaphore_signal: 发送一个信号，让信号总量加 1")]),t._v(" "),s("li",[t._v("dispatch_semaphore_wait: 可以使总信号量减 1，当信号总量为 0 时就会一直等待（阻塞所在线程），否则就可以正常执行")])]),t._v(" "),s("p",[t._v("Dispatch Semaphore 在实际开发中主要用于：")]),t._v(" "),s("ul",[s("li",[t._v("保持线程同步，将异步执行任务转换为同步执行任务")]),t._v(" "),s("li",[t._v("保证线程安全，为线程加锁")])]),t._v(" "),s("h2",{attrs:{id:"基于信号量的线程同步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于信号量的线程同步"}},[t._v("#")]),t._v(" 基于信号量的线程同步")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("semaphoreSync "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    dispatch_queue_t queue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_get_global_queue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DISPATCH_QUEUE_PRIORITY_DEFAULT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    dispatch_semaphore_t semaphore "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_semaphore_create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSThread sleepForTimeInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模拟耗时操作        ")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_semaphore_signal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("semaphore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_semaphore_wait")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("semaphore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DISPATCH_TIME_FOREVER"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"基于信号量的互斥锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于信号量的互斥锁"}},[t._v("#")]),t._v(" 基于信号量的互斥锁")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@interface")]),t._v(" Lock "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NSObject\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("lock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("unlock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@end")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@implementation")]),t._v(" Lock "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    dispatch_semaphore_t _semaphore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instancetype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("init "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),t._v(" init"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        _semaphore "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_semaphore_create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("lock "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_semaphore_wait")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_semaphore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DISPATCH_TIME_FOREVER"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("unlock "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_semaphore_signal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_semaphore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@end")]),t._v("\n")])])]),s("p",[t._v("基于互斥锁就很容易做到资源保护了：访问前，加锁；访问后，解锁。")]),t._v(" "),s("h2",{attrs:{id:"基于信号量的读写锁实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于信号量的读写锁实现"}},[t._v("#")]),t._v(" 基于信号量的读写锁实现")]),t._v(" "),s("p",[t._v("参考之前的博客"),s("router-link",{attrs:{to:"/post/dispatch-semaphore.html"}},[t._v("dispatch_semaphore")]),t._v("。")],1),t._v(" "),s("h1",{attrs:{id:"gcd-dispatch-groups"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gcd-dispatch-groups"}},[t._v("#")]),t._v(" GCD: Dispatch Groups")]),t._v(" "),s("ul",[s("li",[t._v("dispatch_group_create")]),t._v(" "),s("li",[t._v("dispatch_group_enter")]),t._v(" "),s("li",[t._v("dispatch_group_leave")]),t._v(" "),s("li",[t._v("dispatch_group_notify")]),t._v(" "),s("li",[t._v("dispatch_group_async")]),t._v(" "),s("li",[t._v("dispatch_group_wait")])]),t._v(" "),s("p",[t._v("有两种基本用法：")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用法一：显示 enter-leave")]),t._v("\ndispatch_group_t group "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_group_create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndispatch_queue_global_t queue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_get_global_queue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DISPATCH_QUEUE_PRIORITY_DEFAULT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"task 1 begin"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSThread sleepForTimeInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"task 1 end"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_group_leave")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("group"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_group_enter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("group"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_group_notify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("group"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"group done"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用法二：使用 dispatch_group_async")]),t._v("\ndispatch_group_t group "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_group_create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndispatch_queue_global_t queue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_get_global_queue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DISPATCH_QUEUE_PRIORITY_DEFAULT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_group_async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("group"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"task 1 begin"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSThread sleepForTimeInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"task 1 end"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_group_notify")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("group"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"group done"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("和"),s("code",[t._v("dispatch_group_notify")]),t._v("类似，如果想阻塞当前线程，可以使用"),s("code",[t._v("dispatch_group_wait")]),t._v("。")]),t._v(" "),s("p",[t._v("什么时候使用 dispatch semaphore？什么时候使用 dispatch group？")]),t._v(" "),s("p",[t._v("参考"),s("a",{attrs:{href:"https://stackoverflow.com/questions/49923810/when-to-use-semaphore-instead-of-dispatch-group",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),s("OutboundLink")],1),t._v("。大概的意思是 dispatch group 能做的事情 dispatch semaphore 也能做。前者的作用比较单一，后者更灵活。")]),t._v(" "),s("p",[t._v("还没搞清楚的疑问：dispatch group 本质上也是基于信号量的封装？")]),t._v(" "),s("h1",{attrs:{id:"gcd-barriers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gcd-barriers"}},[t._v("#")]),t._v(" GCD: Barriers")]),t._v(" "),s("h2",{attrs:{id:"dispatch-barrier"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dispatch-barrier"}},[t._v("#")]),t._v(" dispatch_barrier")]),t._v(" "),s("p",[t._v("有俩 API："),s("code",[t._v("dispatch_barrier_sync")]),t._v("和"),s("code",[t._v("dispatch_barrier_async")]),t._v("。")]),t._v(" "),s("p",[t._v("使用说明：")]),t._v(" "),s("ul",[s("li",[t._v("只能作用于自定义的并发队列\n"),s("ul",[s("li",[t._v("如果派发的队列不是并发队列，则和"),s("code",[t._v("dispatch_sync")]),t._v("/"),s("code",[t._v("dispatch_async")]),t._v("效果一样")]),t._v(" "),s("li",[t._v("如果派发的队列是 global 队列，则和"),s("code",[t._v("dispatch_sync")]),t._v("/"),s("code",[t._v("dispatch_async")]),t._v("效果一样")])])]),t._v(" "),s("li",[t._v("确保派发的 block 原子执行\n"),s("ul",[s("li",[t._v("基于它特别容易多线程读写机制")])])])]),t._v(" "),s("h2",{attrs:{id:"barrier-block"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#barrier-block"}},[t._v("#")]),t._v(" Barrier Block")]),t._v(" "),s("p",[t._v("iOS 8 引入了 dispatch_block 系列方法，其中包括："),s("code",[t._v("dispatch_block_create")]),t._v("。")]),t._v(" "),s("p",[t._v("可以在创建"),s("code",[t._v("dispatch_block_t")]),t._v("对象时指定 barrier 属性，此时如果在"),s("strong",[t._v("自定义并发队列")]),t._v("中派发它，它的作用效果类似于"),s("code",[t._v("dispatch_barrier_sync")]),t._v("/"),s("code",[t._v("dispatch_barrier_async")]),t._v("。")]),t._v(" "),s("p",[t._v("如下：")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[t._v("\ndispatch_queue_t queue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_queue_create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.zhangbuhuai"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DISPATCH_QUEUE_CONCURRENT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"task 1 begin"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSThread sleepForTimeInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"task 1 end"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_block_create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DISPATCH_BLOCK_BARRIER"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"task 2 begin"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSThread sleepForTimeInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"task 2 end"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"task 3 begin"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSThread sleepForTimeInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"task 3 end"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"task 4 begin"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSThread sleepForTimeInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"task 4 end"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("上述代码确保了 task 2 的原子执行。")]),t._v(" "),s("h1",{attrs:{id:"gcd-基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gcd-基本概念"}},[t._v("#")]),t._v(" GCD: 基本概念")]),t._v(" "),s("h2",{attrs:{id:"串行-v-s-并行（serial-v-s-concurrent）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#串行-v-s-并行（serial-v-s-concurrent）"}},[t._v("#")]),t._v(" 串行 v.s 并行（serial v.s concurrent）")]),t._v(" "),s("h2",{attrs:{id:"同步-v-s-异步（synchronous-v-s-asynchronous）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步-v-s-异步（synchronous-v-s-asynchronous）"}},[t._v("#")]),t._v(" 同步 v.s 异步（synchronous v.s asynchronous）")]),t._v(" "),s("h2",{attrs:{id:"并发-v-s-并行（concurrency-v-s-paralleism）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#并发-v-s-并行（concurrency-v-s-paralleism）"}},[t._v("#")]),t._v(" 并发 v.s 并行（concurrency v.s paralleism）")]),t._v(" "),s("p",[t._v("并发和并行是一种计算模型，使得计算机能够在同一时间处理多个任务；并发表示逻辑概念上的同时，并行表示物理概念上的同时。")]),t._v(" "),s("h2",{attrs:{id:"死锁（deadlock"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#死锁（deadlock"}},[t._v("#")]),t._v(" 死锁（deadlock)")]),t._v(" "),s("p",[t._v("死锁的条件是什么？")]),t._v(" "),s("h2",{attrs:{id:"临界区（critical-section）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#临界区（critical-section）"}},[t._v("#")]),t._v(" 临界区（critical section）")]),t._v(" "),s("h2",{attrs:{id:"竞态条件（race-condition）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#竞态条件（race-condition）"}},[t._v("#")]),t._v(" 竞态条件（race condition）")]),t._v(" "),s("h2",{attrs:{id:"线程安全（thread-safe）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程安全（thread-safe）"}},[t._v("#")]),t._v(" 线程安全（thread safe）")]),t._v(" "),s("h2",{attrs:{id:"上下文切换（context-switch）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#上下文切换（context-switch）"}},[t._v("#")]),t._v(" 上下文切换（context switch）")]),t._v(" "),s("h2",{attrs:{id:"优先级反转（priority-inversion）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优先级反转（priority-inversion）"}},[t._v("#")]),t._v(" 优先级反转（priority inversion）")]),t._v(" "),s("p",[t._v("关于优先级反转，"),s("a",{attrs:{href:"https://objccn.io/issue-2-1/",target:"_blank",rel:"noopener noreferrer"}},[t._v("objc.io"),s("OutboundLink")],1),t._v(" 里讲得很清楚。")]),t._v(" "),s("p",[t._v("系统对线程的时间分配是通过优先级来控制的，高优先级的线程时间片多、长；低优先级的线程时间片短、少，甚至没有。")]),t._v(" "),s("p",[t._v("而优先级反转描述的是：因为某些原因，低优先级的线程阻塞了高优先级线程的执行。可以举俩例子。")]),t._v(" "),s("p",[t._v("其一，如下图。一共 3 个线程，低优先级线程和高优先级线程需要同时访问共享资源；此时低优先级线程持有锁，处于运行状态；高优先级的线程因此而阻塞；与此同时中优先级线程也处于运行状态，因为它的优先级比低优先级高，所有它分配的时间片多并且长；因此低优先级线程得不到时间片而无法执行释放锁，高优先级线程也因此被间接的 block 住了。")]),t._v(" "),s("e-img",{attrs:{src:"/image/draft/thread-priority-inversion.png"}}),t._v(" "),s("p",[t._v("其二，使用 OSSpinLock。OSSpinLock 上锁和开锁的速度是最快的：")]),t._v(" "),s("e-img",{attrs:{src:"/image/draft/ios-lock-perfs.png"}}),t._v(" "),s("blockquote",[s("p",[t._v("上图参考自 ibireme 的"),s("a",{attrs:{href:"https://blog.ibireme.com/2016/01/16/spinlock_is_unsafe_in_ios/",target:"_blank",rel:"noopener noreferrer"}},[t._v("不再安全的 OSSpinLock"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("OSSpinLock 上锁和开锁的速度是最快的，但是这并不代表它有的系统开销小，自旋锁是一种忙等锁，这意味这等待线程不会挂起，而是一直询问锁的情况，直到获取该锁，没有线程挂起的状态，也就节省了线程状态转换的部分开销，所以呈现出一种比较高的性能。但是自旋锁有一种叫做优先级反转的坑，下面来说一下这个坑产生的原因：")]),t._v(" "),s("p",[t._v("假如一个低优先级线程持有了 OSSpinLock，高优先级的锁就会等待并不断自旋检测，虽然在等待，但是线程仍然可以以较高的优先级获得处理机的时间片，当有很多高优先级的线程在等待时，低优先级的持锁线程反而无法获得时间片运行了，这时候所有线程都在等待一个永远无法释放的锁，就产生了死锁，从现象上看，就好像线程优先级发生了倒置，所以我们称这种现象为优先级反转。")]),t._v(" "),s("p",[t._v("如何解决优先级反转问题？网上有答案：优先级继承、优先级天花板。但是如果直接这么回答，显然是在背答案。")]),t._v(" "),s("p",[t._v("针对这两种 case，有不同的解决方案。")]),t._v(" "),s("p",[t._v("针对第一种 case，优先级继承、优先级天花板显然可以解决问题，但 iOS 中貌似找不到相关的接口。所以真正的解决方案是：")]),t._v(" "),s("ul",[s("li",[t._v("不要使用不同的优先级")]),t._v(" "),s("li",[t._v("当使用 GCD 时，总是使用默认的优先级队列，或者指定使用目标队列")])]),t._v(" "),s("p",[t._v("针对第二种 case，就不要使用 SpinLock（OSSpinLock） 了。")]),t._v(" "),s("h2",{attrs:{id:"dispatch-block"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dispatch-block"}},[t._v("#")]),t._v(" dispatch block")]),t._v(" "),s("p",[t._v("从 iOS 8 开始，block 也是可以取消的，取消姿势是：")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_block_cancel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dispatch_block_t block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("不过传入的 block 必须是"),s("code",[t._v("dispatch_block_create")]),t._v("创建的。")]),t._v(" "),s("p",[t._v("对比 NSOperation 和 GCD 时，以前常会提到的一条是：前者可以取消，后者不行？现在如果还这么回答，就是错误的了。")]),t._v(" "),s("h2",{attrs:{id:"dispatch-io"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dispatch-io"}},[t._v("#")]),t._v(" dispatch IO")]),t._v(" "),s("ul",[s("li",[t._v("dispatch_io_create")]),t._v(" "),s("li",[t._v("dispatch_io_read")]),t._v(" "),s("li",[t._v("dispatch_io_write")]),t._v(" "),s("li",[t._v("dispatch_io_close")]),t._v(" "),s("li",[t._v("dispatch_io_barrier")])]),t._v(" "),s("h2",{attrs:{id:"dispatch-source"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dispatch-source"}},[t._v("#")]),t._v(" dispatch source")]),t._v(" "),s("h2",{attrs:{id:"dispatch-object"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dispatch-object"}},[t._v("#")]),t._v(" dispatch object")]),t._v(" "),s("h2",{attrs:{id:"runloop-与多线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#runloop-与多线程"}},[t._v("#")]),t._v(" Runloop 与多线程")]),t._v(" "),s("p",[t._v("RunLoop 是多线程的一个基础设施，不能脱离线程独立存在")]),t._v(" "),s("p",[t._v("如果⼦线程的runloop没有 source / timer 的话，那么⼦线程的runloop会⽴即关闭.")]),t._v(" "),s("h1",{attrs:{id:"常见相关问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见相关问题"}},[t._v("#")]),t._v(" 常见相关问题")]),t._v(" "),s("h2",{attrs:{id:"如何看待-gcd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何看待-gcd"}},[t._v("#")]),t._v(" 如何看待 GCD")]),t._v(" "),s("p",[t._v("线程模型是一种对计算机友好，但对开发者不友好的计算模型；队列模型是对线程模型的一个更高层次抽象，营造出了更强的次序感，将我们设计的着重点拉回了逻辑本身的执行顺序上，显然更友好。")]),t._v(" "),s("h2",{attrs:{id:"为什么⼏乎所有的gui框架都是单线程的？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么⼏乎所有的gui框架都是单线程的？"}},[t._v("#")]),t._v(" 为什么⼏乎所有的GUI框架都是单线程的？")]),t._v(" "),s("p",[t._v("这里有答案："),s("a",{attrs:{href:"https://community.oracle.com/blogs/kgh/2004/10/19/multithreaded-toolkits-failed-dream",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://community.oracle.com/blogs/kgh/2004/10/19/multithreaded-toolkits-failed-dream"),s("OutboundLink")],1)]),t._v(" "),s("h1",{attrs:{id:"典型场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#典型场景"}},[t._v("#")]),t._v(" 典型场景")]),t._v(" "),s("h2",{attrs:{id:"网络请求聚合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网络请求聚合"}},[t._v("#")]),t._v(" 网络请求聚合")]),t._v(" "),s("p",[t._v("⼀个⻚⾯需要请求三个⽹络请求，需要在三个⽹络请求都返回的时候刷新界⾯。如何实现呢？")]),t._v(" "),s("p",[t._v("这个问题有多种解决方案，我想到的包括：")]),t._v(" "),s("ul",[s("li",[t._v("dispatch_group")]),t._v(" "),s("li",[t._v("dispatch_semaphore")])]),t._v(" "),s("h2",{attrs:{id:"实现线程安全的-nsmutablearray"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现线程安全的-nsmutablearray"}},[t._v("#")]),t._v(" 实现线程安全的 NSMutableArray")]),t._v(" "),s("p",[t._v("实现⼀个线程安全的 NSMutableArray 的读和写。")]),t._v(" "),s("p",[t._v("YYKit 有实现：YYThreadSafeArray，非常复杂，要 override 几乎所有 API。")]),t._v(" "),s("h2",{attrs:{id:"多线程下载器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多线程下载器"}},[t._v("#")]),t._v(" 多线程下载器")]),t._v(" "),s("p",[t._v("编写⼀个多线程下载器，可以执⾏多个下载任务，每个任务可以保存当下下载字节数，总字节数，可以设置回调得到当前下载进度。")]),t._v(" "),s("p",[t._v("这其实是一个线程通信问题。")]),t._v(" "),s("p",[t._v("这种 Case 使用 NSOperation 比较好搞，使用 GCD 不太好弄。")]),t._v(" "),s("p",[t._v("Operation 可以子类化，可以保存很多状态，可以做很多很多逻辑。")]),t._v(" "),s("p",[t._v("然后张杰没给结论。")]),t._v(" "),s("h2",{attrs:{id:"阻塞主线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#阻塞主线程"}},[t._v("#")]),t._v(" 阻塞主线程")]),t._v(" "),s("p",[t._v("需要在主线程等待⼀个异步任务返回，才能继续执⾏下⾯的逻辑，但是⼜不希望堵塞⽤户事件。")]),t._v(" "),s("p",[t._v("基本思路是使用 while")]),t._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nullable NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("stringByEvaluatingJavaScriptFromString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("script\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    __block NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    dispatch_semaphore_t waitSemaphore "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_semaphore_create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" evaluateJavaScript"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("script completionHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSString "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NSError "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_semaphore_signal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("waitSemaphore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dispatch_semaphore_wait 返回 0 表示 ok，返回非 0 值表示 timeout 了")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_semaphore_wait")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("waitSemaphore"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DISPATCH_TIME_NOW"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSRunLoop mainRunLoop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" runMode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("NSDefaultRunLoopMode beforeDate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSDate dateWithTimeIntervalSinceNow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("但这种结局问题的思路是有问题的。")]),t._v(" "),s("h2",{attrs:{id:"dispatch-after-是延迟提交，还是延迟运行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dispatch-after-是延迟提交，还是延迟运行"}},[t._v("#")]),t._v(" dispatch_after 是延迟提交，还是延迟运行")]),t._v(" "),s("p",[t._v("dispatch_after是延迟提交，不是延迟运行。")]),t._v(" "),s("h1",{attrs:{id:"nsoperation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nsoperation"}},[t._v("#")]),t._v(" NSOperation")]),t._v(" "),s("p",[t._v("什么时候需要使用 NSOperation：")]),t._v(" "),s("ul",[s("li",[t._v("取消")]),t._v(" "),s("li",[t._v("任务之间有依赖")]),t._v(" "),s("li",[t._v("需要设置任务优先级")]),t._v(" "),s("li",[t._v("复杂逻辑")]),t._v(" "),s("li",[t._v("保存业务状态")]),t._v(" "),s("li",[t._v("子类化")])]),t._v(" "),s("p",[t._v("Operation 的状态：")]),t._v(" "),s("ul",[s("li",[t._v("isReady")]),t._v(" "),s("li",[t._v("isExecuting")]),t._v(" "),s("li",[t._v("isFinished")]),t._v(" "),s("li",[t._v("isCancelled")])]),t._v(" "),s("p",[t._v("其他属性：")]),t._v(" "),s("ul",[s("li",[t._v("isAsync")]),t._v(" "),s("li",[t._v("dependencies")]),t._v(" "),s("li",[t._v("queuePriority")]),t._v(" "),s("li",[t._v("finishBlock")])]),t._v(" "),s("p",[t._v("NSOperation 是建立在 GCD 之上的。")]),t._v(" "),s("p",[t._v("detach & join")]),t._v(" "),s("h1",{attrs:{id:"死锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#死锁"}},[t._v("#")]),t._v(" 死锁")]),t._v(" "),s("h2",{attrs:{id:"死锁的-4-个条件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#死锁的-4-个条件"}},[t._v("#")]),t._v(" 死锁的 4 个条件")]),t._v(" "),s("p",[t._v("从一个环来解释：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("环路")]),t._v(" "),s("ul",[s("li",[t._v("引用了其他资源")])])]),t._v(" "),s("li",[s("p",[t._v("互斥")])]),t._v(" "),s("li",[s("p",[t._v("不可剥夺")])]),t._v(" "),s("li",[s("p",[t._v("互斥条件: 指线程对所分配的资源进行排它性使用，即在一段时间内某资源只由一个线程占用。如果此时还有其它线程请求该资源，则请求者只能等待，直至占有该资源的线程用毕释放")])]),t._v(" "),s("li",[s("p",[t._v("请求和保持条件: 指线程已经保持了至少一个资源，但又提出了新的资源请求，而该资源又被其它线程占有，或者已经拥有了该资源却又再次请求，此时请求线程阻塞，但又对自己已获得的资源保持不放")])]),t._v(" "),s("li",[s("p",[t._v("不剥夺条件: 指线程在已获得的资源，在未使用完之前，不能被剥夺，只能在使用完时由自己释放")])]),t._v(" "),s("li",[s("p",[t._v("环路等待条件: 指在发生死锁时，必然存在一个线程–资源的环形链，即线程集合{P0,P1,P2,P3,...Pn}中的P0正在等待P1占用的资源；P1正在等待P2占用的资源，......，Pn正在等待已被P0占用的资源")])])])],1)}),[],!1,null,null,null);a.default=e.exports}}]);