(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{109:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("很早就知道了 Objective-C Runtime 这个概念，「Objective-C 奇技淫巧」「iOS 黑魔法」各种看起来很屌的主题中总会有它的身影；但一直没有深入去学习，一来觉得目前在实际项目中还没有必要了解，二来懒。但，若想成为一个合格的 iOS 开发者，这个东西是躲不过的，好吧，抡起胳膊开始吧，争取一点点把它整明白吧！")]),t._v(" "),a("p",[t._v("和了解其他技术一样，在了解一个东西之前，我总是问自己，这个有啥实际意义？为什么要了解它？多自问一些问题，找到实际意义，在理解上总会容易一些，学习也自然更有目的性一些。")]),t._v(" "),a("p",[t._v("好吧，看了十几篇博客和 iOS 文档，还是很容易针对 Objective-C Runtime 提出一些问题的，有了这些问题，理解 Objective-C Runtime 就自然不会过于枯燥了，譬如：")]),t._v(" "),a("ul",[a("li",[t._v("在 iOS 中调用方法为什么叫「发送消息」，为什么这个概念这么重要？")]),t._v(" "),a("li",[t._v("KVO 的实现原理是什么，是否涉及 Objective-C Runtime？")]),t._v(" "),a("li",[t._v("Category 的原理是什么？为什么其他语言中没有这个东东？")]),t._v(" "),a("li",[t._v("Category 中以「关联对象」的方式添加动态属性的原理什么？")])]),t._v(" "),a("p",[t._v("看了一些大牛的博客之后，对 Objective-C Runtime 的重要性在心里基本有谱了，但路要一步一步走，饭要一口一口吃，先将一些基础性的概念进行整理，消息转发、Method Swizzling 之类的高端东西放在之后的博客分析吧！")]),t._v(" "),a("h2",{attrs:{id:"关于-objective-c-runtime"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于-objective-c-runtime"}},[t._v("#")]),t._v(" 关于 Objective-C Runtime")]),t._v(" "),a("p",[a("strong",[t._v("Runtime 的学习资源")])]),t._v(" "),a("p",[t._v("Runtime 的学习资源非常丰富，下面是个人的一些整理：")]),t._v(" "),a("ul",[a("li",[t._v("《Objective-C Runtime Programming Guide》")]),t._v(" "),a("li",[a("code",[t._v("/usr/include/objc/")]),t._v("下的头文件，譬如"),a("code",[t._v("objc.h")]),t._v("，"),a("code",[t._v("runtime.h")]),t._v("，"),a("code",[t._v("NSObject.h")]),t._v("，"),a("code",[t._v("message.h")]),t._v("等；"),a("code",[t._v("/usr/include/objc/")]),t._v("下的头文件不多，都可以看一下")]),t._v(" "),a("li",[t._v("《Effective Objective-C 2.0》")]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.tuicool.com/articles/FRRVNv",target:"_blank",rel:"noopener noreferrer"}},[t._v("理解 Objective-C Runtime"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://blog.devtang.com/blog/2013/10/15/objective-c-object-model/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Objective-C 对象模型及应用"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://blog.devtang.com/blog/2014/05/30/understand-tagged-pointer/",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解 Tagged Point"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://yulingtianxia.com/blog/2014/11/05/objective-c-runtime/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Objective-C Runtime"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("Objective-C Runtime 系列博客：\n"),a("ul",[a("li",[a("a",{attrs:{href:"http://tech.glowing.com/cn/objective-c-runtime/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Objective C Runtime"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://tech.glowing.com/cn/method-swizzling-aop/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Method Swizzling 和 AOP 实践"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://tech.glowing.com/cn/implement-kvo/",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何自己动手实现 KVO"),a("OutboundLink")],1)])])]),t._v(" "),a("li",[t._v("刨根问底 Objective－C Runtime 系列博客：\n"),a("ul",[a("li",[a("a",{attrs:{href:"http://t.cn/R7HYfhz",target:"_blank",rel:"noopener noreferrer"}},[t._v("刨根问底 Objective－C Runtime（1）－ Self & Super"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://t.cn/R7QUSUE",target:"_blank",rel:"noopener noreferrer"}},[t._v("刨根问底 Objective－C Runtime（2）－ Object & Class & Meta Class"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://t.cn/R7meOzE",target:"_blank",rel:"noopener noreferrer"}},[t._v("刨根问底 Objective－C Runtime（3）－ 消息 和 Category"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://t.cn/R7mdOq1",target:"_blank",rel:"noopener noreferrer"}},[t._v("刨根问底 Objective－C Runtime（4）－ 成员变量与属性"),a("OutboundLink")],1)])])]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.cnblogs.com/biosli/p/NSObject_inherit_2.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("继承自 NSObject 的不常用又很有用的函数（2）"),a("OutboundLink")],1)])]),t._v(" "),a("blockquote",[a("p",[t._v("P.S: 值得一提的是，Objective-C Runtime 是开源的，任何时候都能从"),a("a",{attrs:{href:"http://opensource.apple.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("opensource"),a("OutboundLink")],1),t._v("中获取源代码。")])]),t._v(" "),a("p",[a("strong",[t._v("动态语言 v.s 静态语言")])]),t._v(" "),a("p",[t._v("在网上阅读 Objective-C Runtime 相关的信息时都提到了「Objective-C 是一门动态语言...」「作为一门动态语言...」之类的字眼，这让我有些诧异。因为根据我之前的理解：虽然动态和静态语言都是相对的，但 Objective-C 怎么也不算动态语言吧！动态语言是 Python、Javascript 这种弱类型语言吧？！")]),t._v(" "),a("p",[t._v("关于 Objective-C 是否是动态语言，笔者才疏学浅，不敢妄论，知乎中关于这个有讨论："),a("a",{attrs:{href:"http://www.zhihu.com/question/19970471",target:"_blank",rel:"noopener noreferrer"}},[t._v("Objective-C 是动态语言吗？为什么？"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("但无论如何，它比 C++、C 这类传统静态语言具备更多的动态特性，说它是动态语言或许不为过吧。暂时不纠结这个问题了，希望以后有更多的自信回答这个问题。跟随主流意见，暂时认为 Objective-C 是一门动态语言吧。")]),t._v(" "),a("p",[t._v("P.S: 后来又仔细阅读了一下《Effective Objective-C 2.0》，其中对「Objective-C 是动态语言」有更好的佐证，后面阐述「Objective-C 的消息传递机制」时再补充说明吧！")]),t._v(" "),a("p",[t._v("P.S: 关于 OC 是动态语言这个话题，总会少不了「动态特性」「动态类型」「动态绑定」这几个关键词的讨论分析，之前在《"),a("router-link",{attrs:{to:"/post/basics-in-objective-c/#多态、动态类型和动态绑定"}},[t._v("Objective-C 基础知识")]),t._v("》中进行了简单的概述。")],1),t._v(" "),a("p",[a("strong",[t._v("Runtime 是什么")])]),t._v(" "),a("p",[t._v("Runtime 是什么？为什么有 Runtime 这个东东？")]),t._v(" "),a("p",[t._v("《Objective-C Runtime Programming Guide》的 introduction 的第一段就回答了这个问题：")]),t._v(" "),a("blockquote",[a("p",[t._v("The Objective-C language defers as many decisions as it can from compile time and link time to runtime. Whenever possible, it does things dynamically. This means that the language requires not just a compiler, but also a runtime system to execute the compiled code. The runtime system acts as a kind of operating system for the Objective-C language; it’s what makes the language work.")])]),t._v(" "),a("p",[t._v("不过貌似不够清晰，"),a("a",{attrs:{href:"http://www.tuicool.com/articles/FRRVNv",target:"_blank",rel:"noopener noreferrer"}},[t._v("理解 Objective-C Runtime"),a("OutboundLink")],1),t._v("中有更浅显的解释：")]),t._v(" "),a("blockquote",[a("p",[t._v("Objective-C 是面相运行时的语言（runtime oriented language），就是说它会尽可能的把编译和链接时要执行的逻辑延迟到运行时。这就给了你很大的灵活性，你可以按需要把消息重定向给合适的对象，你甚至可以交换方法的实现，等等；这就需要使用 runtime，runtime 可以做对象自省查看他们正在做的和不能做的（don't respond to）并且适当地分发消息。")])]),t._v(" "),a("blockquote",[a("p",[t._v("Objective-C 的 Runtime 是一个运行时库（Runtime Library），它是一个主要使用 C 和汇编写的库，为 C 添加了面相对象的能力并创造了 Objective-C。这就是说它在类信息（Class Information）中被加载，完成所有的方法分发，方法转发，等等。Objective-C runtime 创建了所有需要的结构体，让 Objective-C 的面相对象编程变为可能。")])]),t._v(" "),a("h2",{attrs:{id:"关于-runtime-的一些术语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于-runtime-的一些术语"}},[t._v("#")]),t._v(" 关于 Runtime 的一些术语")]),t._v(" "),a("p",[t._v("各种 Runtime 资料中有很多术语，有些是以前认识但理解不深刻的，譬如"),a("code",[t._v("id")]),t._v("、"),a("code",[t._v("Class")]),t._v("，有些是很少接触的，譬如"),a("code",[t._v("isa")]),t._v("。")]),t._v(" "),a("p",[t._v("为了更好地理解 Runtime，先了解 Runtime 的一些术语是非常必要的。")]),t._v(" "),a("p",[t._v("首先简单提一下"),a("code",[t._v("objc_class")]),t._v("，它是一个结构体，其中包含一些类信息；然后是"),a("code",[t._v("objc_object")]),t._v("，它也是一个结构体，但它只包括一个条目 -- "),a("code",[t._v("isa")]),t._v("，后者是一个"),a("code",[t._v("objc_class")]),t._v("指针；")]),t._v(" "),a("p",[t._v("其实，说到底，"),a("code",[t._v("NSObject")]),t._v("就是建立在"),a("code",[t._v("objc_class")]),t._v("这个结构体之上的，所以了解"),a("code",[t._v("objc_class")]),t._v("对于了解"),a("code",[t._v("NSObject")]),t._v("以及 Cocoa 的对象模型是非常重要的。")]),t._v(" "),a("p",[t._v("P.S: "),a("code",[t._v("objc_class")]),t._v("和"),a("code",[t._v("isa")]),t._v("相对而言信息量比较大，后文再详细阐述。")]),t._v(" "),a("p",[t._v("OK，接着来看建立在"),a("code",[t._v("objc_class")]),t._v("和"),a("code",[t._v("objc_object")]),t._v("基础之上的一些关键字。")]),t._v(" "),a("p",[a("strong",[t._v("Class")])]),t._v(" "),a("p",[a("code",[t._v("Class")]),t._v("（不是 class 哦），它在"),a("code",[t._v("<objc/objc.h>")]),t._v("中定义，如下：")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// An opaque type that represents an Objective-C class.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("objc_class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("可以看到"),a("code",[t._v("Class")]),t._v("其实是一种指针类型，即用于指向"),a("code",[t._v("objc_class")]),t._v("结构体。"),a("code",[t._v("NSObject")]),t._v("中定义的方法"),a("code",[t._v("-(Class)class")]),t._v("用于返回其对应的"),a("code",[t._v("objc_class")]),t._v("结构体指针；")]),t._v(" "),a("p",[t._v("除了"),a("code",[t._v("-(Class)class")]),t._v("方法之外，"),a("code",[t._v("NSObject")]),t._v("类中还有一些常见方法包含"),a("code",[t._v("Class")]),t._v("类型参数或者返回"),a("code",[t._v("Class")]),t._v("类型返回值，如下：")]),t._v(" "),a("div",{staticClass:"language-objectivec extra-class"},[a("pre",{pre:!0,attrs:{class:"language-objectivec"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BOOL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("isKindOfClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("aClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BOOL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("isMemberOfClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("aClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BOOL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("isSubclassOfClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("aClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BOOL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("isSubclassOfClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("aClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("superclass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("id")])]),t._v(" "),a("p",[t._v("对于有过 iOS 开发经验的人而言，"),a("code",[t._v("id")]),t._v("使用太广泛了，不过似乎对它还没有过比较深入的理解；事实上，一直以为"),a("code",[t._v("id")]),t._v("和"),a("code",[t._v("NSObject *")]),t._v("等价呢！现在看来，这种理解太 naive 了，它也在"),a("code",[t._v("<objc/objc.h>")]),t._v("中定义：")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("objc_object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Class isa  OBJC_ISA_AVAILABILITY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// objc_object也是一个只包含一个条目isa（指向objc_object结构体的指针）的结构体。")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// A pointer to an instance of a class.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("objc_object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("SEL")])]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// An opaque type that represents a method selector.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("objc_selector")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("SEL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("没找到"),a("code",[t._v("objc_selector")]),t._v("的定义，但根据网友的描述：其实它就是个映射到方法的 C 字符串，可以用 Objc 编译器命令"),a("code",[t._v("@selector()")]),t._v("或者 Runtime 系统的"),a("code",[t._v("sel_registerName")]),t._v("函数来获得一个 SEL 类型的方法选择器（通常简称：选择子）。")]),t._v(" "),a("p",[t._v("考虑到 Xcode 对"),a("code",[t._v("@selector")]),t._v("的支持比对"),a("code",[t._v("sel_registerName")]),t._v("的支持更好，所以"),a("code",[t._v("@selector")]),t._v("貌似用得更多一些，但有时候"),a("code",[t._v("sel_registerName")]),t._v("或许更简洁一些。")]),t._v(" "),a("p",[t._v("譬如有一段代码：")]),t._v(" "),a("div",{staticClass:"language-objectivec extra-class"},[a("pre",{pre:!0,attrs:{class:"language-objectivec"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("selectedViewController respondsToSelector"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@selector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isReadyForEditing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    boolNumber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("selectedViewController performSelector"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@selector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isReadyForEditing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("但当前上下文中没有"),a("code",[t._v("isReadyForEditing")]),t._v("这个方法，所以编译器会有警告；当然，可以有各种方式来关闭警告，如下是其中一种：")]),t._v(" "),a("div",{staticClass:"language-objectivec extra-class"},[a("pre",{pre:!0,attrs:{class:"language-objectivec"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("pragma")]),t._v(" clang diagnostic push")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("pragma")]),t._v(' clang diagnostic ignored "-Wundeclared-selector"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("selectedViewController respondsToSelector"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@selector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isReadyForEditing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    boolNumber "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("selectedViewController performSelector"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@selector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("isReadyForEditing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("pragma")]),t._v(" clang diagnostic pop")]),t._v("\n")])])]),a("p",[t._v("但此时，若改用"),a("code",[t._v("sel_registerName")]),t._v("，则这个警告就没了！")]),t._v(" "),a("p",[t._v("P.S: 不晓得 Apple 更青睐于哪一个，个人感觉是"),a("code",[t._v("@selector")]),t._v("，因为"),a("code",[t._v("sel_registerName")]),t._v("的使用几乎没碰到过。")]),t._v(" "),a("p",[a("strong",[t._v("IMP")])]),t._v(" "),a("p",[t._v("IMP 的定义如下：")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// A pointer to the function of a method implementation. ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" !OBJC_OLD_DISPATCH_PROTOTYPES")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("IMP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* id, SEL, ... */")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("else")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" id "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("IMP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SEL"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n")])])]),a("p",[t._v("可以了解到，IMP 是一个函数指针。IMP 是 Implementation 的缩写，一个函数是由一个 selector(SEL)，和一个 implement(IML)组成的；Selector 相当于门牌号，而 Implement 才是真正的住户（函数实现）。理解 Selector 和 Implementation 的关系蛮重要的！")]),t._v(" "),a("p",[a("strong",[t._v("Method")])]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// An opaque type that represents a method in a class definition.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("objc_method")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Ivar")])]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// An opaque type that represents an instance variable.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("objc_ivar")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Ivar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("Category")])]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// An opaque type that represents a category.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("objc_category")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Category"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("objc_property_t")])]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/// An opaque type that represents an Objective-C declared property.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("objc_property")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("objc_property_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("可以通过"),a("code",[t._v("class_copyPropertyList")]),t._v("和"),a("code",[t._v("protocol_copyPropertyList")]),t._v("方法来获取类（Class）和协议（Protocol）中的属性，获取属性之后，还可以使用"),a("code",[t._v("property_getName")]),t._v("获取属性的名字（C 字串）：")]),t._v(" "),a("div",{staticClass:"language-objectivec extra-class"},[a("pre",{pre:!0,attrs:{class:"language-objectivec"}},[a("code",[t._v("objc_property_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("class_copyPropertyList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Class cls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("outCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobjc_property_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("protocol_copyPropertyList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Protocol "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("proto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("outCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("property_getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("objc_property_t property"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("举个例子：")]),t._v(" "),a("div",{staticClass:"language-objectivec extra-class"},[a("pre",{pre:!0,attrs:{class:"language-objectivec"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@interface")]),t._v(" Student "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NSObject\n    \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@property")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nonatomic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" strong"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" NSString "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@property")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nonatomic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" assign"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" NSUInteger age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@property")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nonatomic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" assign"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" NSUInteger score"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@end")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@implementation")]),t._v(" Student\n    \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@end")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@interface")]),t._v(" ViewController "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@end")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@implementation")]),t._v(" ViewController\n    \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("viewDidLoad "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),t._v(" viewDidLoad"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" outCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    objc_property_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("aProperty "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("class_copyPropertyList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Student class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("outCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"一共有%d个属性，它们的名字分别是："')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" outCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" outCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        objc_property_t aP "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" aProperty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" property_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("property_getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("aP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"%s"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" property_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@end")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*输出：\nStudent类一共有3个属性，它们的名字分别是：\nname\nage\nscore\n*/")]),t._v("\n")])])]),a("p",[t._v("这个示例的执行结果也从侧面反映出了，"),a("code",[t._v("NSObject")]),t._v("中没有定义属性（只有一个叫"),a("code",[t._v("isa")]),t._v("成员变量）。")]),t._v(" "),a("p",[t._v("P.S: 属性 v.s 成员变量？这里留个尾巴，以后把这个问题也分析一下吧！")]),t._v(" "),a("h2",{attrs:{id:"objc-class-和-isa"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#objc-class-和-isa"}},[t._v("#")]),t._v(" objc_class 和 isa")]),t._v(" "),a("p",[t._v("把"),a("code",[t._v("objc_class")]),t._v("和"),a("code",[t._v("isa")]),t._v("单独拧出来的原因是它们的信息量比较大，稍微复杂一点！")]),t._v(" "),a("p",[t._v("Objective-C 是一种面向对象的语言。按照面向对象语言的设计原则，所有事物都应该是对象（严格来说 Objective-C 并没有完全做到这一点，因为它有象"),a("code",[t._v("int")]),t._v(", "),a("code",[t._v("double")]),t._v("这样的简单变量类型）。所以一定要有这个认识："),a("strong",[t._v("Objective-C 中，类也是对象")]),t._v("。")]),t._v(" "),a("p",[t._v("在 Cocoa 中，所有类都继承自"),a("code",[t._v("NSObject")]),t._v("，参考"),a("code",[t._v("NSObject")]),t._v("在"),a("code",[t._v("<objc/NSObject.h>")]),t._v("中的定义如下：")]),t._v(" "),a("div",{staticClass:"language-objectivec extra-class"},[a("pre",{pre:!0,attrs:{class:"language-objectivec"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@interface")]),t._v(" NSObject "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NSObject"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Class isa  OBJC_ISA_AVAILABILITY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("objc_class")]),t._v("的定义如下：")]),t._v(" "),a("div",{staticClass:"language-C extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("objc_class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Class isa  OBJC_ISA_AVAILABILITY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" !__OBJC2__")]),t._v("\n    Class super_class                                        OBJC2_UNAVAILABLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("name                                         OBJC2_UNAVAILABLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" version                                             OBJC2_UNAVAILABLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" info                                                OBJC2_UNAVAILABLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" instance_size                                       OBJC2_UNAVAILABLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("objc_ivar_list")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ivars                             OBJC2_UNAVAILABLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("objc_method_list")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("methodLists                    OBJC2_UNAVAILABLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("objc_cache")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cache                                 OBJC2_UNAVAILABLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("objc_protocol_list")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("protocols                     OBJC2_UNAVAILABLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[t._v("#"),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("可以知道在运行时，所有类对象都有一个名为"),a("code",[t._v("isa")]),t._v("的指针，这个指针指向一个"),a("code",[t._v("objc_class")]),t._v("结构体，"),a("code",[t._v("objc_class")]),t._v("结构体中包含一些与类相关的信息。问题是这个"),a("code",[t._v("isa")]),t._v("指向的"),a("code",[t._v("objc_class")]),t._v("结构体的信息所对应的是自己的信息还是对应的类的信息呢？当然是其所对应的类的信息，存储了变量列表、方法列表、遵守的协议列表等等。")]),t._v(" "),a("p",[t._v("简单来说，"),a("code",[t._v("isa")]),t._v("指针被称为「is a」指针，顾名思义，它告诉了对象所属的类信息，描述「aX is a X」。")]),t._v(" "),a("p",[t._v("某个对象的"),a("code",[t._v("isa")]),t._v("指针指向的"),a("code",[t._v("objc_class")]),t._v("结构体存放的是其所对应的类的元数据（metadata），通过它我们可以知道该对象：所对应类的名字（"),a("code",[t._v("name")]),t._v("）、可以做哪些事情（"),a("code",[t._v("objc_method_list")]),t._v("是个二维方法列表）、包括哪些成员变量（"),a("code",[t._v("objc_ivar_list")]),t._v("）、遵守哪些协议（"),a("code",[t._v("protocols")]),t._v("）。")]),t._v(" "),a("p",[t._v("回到"),a("code",[t._v("objc_class")]),t._v("，可以看到"),a("code",[t._v("objc_class")]),t._v("结构体首变量也是一个"),a("code",[t._v("isa")]),t._v("指针，这也印证了「类也是对象」这个说法。对象的"),a("code",[t._v("isa")]),t._v("指针指向的是该对象的本类，而类的"),a("code",[t._v("isa")]),t._v("指针指向的另外一个类被称为"),a("strong",[t._v("元类")]),t._v("（metaclass），用来表述类本身所表具备的元数据，类方法就定义于此；也正因为类本身也是一个对象，所以类本身可以接收消息。譬如：考虑到"),a("code",[t._v("NSObject")]),t._v("类本身也是一个对象（是 metaclass 的一个对象，常称之为"),a("strong",[t._v("类类型对象")]),t._v("），所以"),a("code",[t._v("[NSObject alloc]")]),t._v("其实可以看成是对"),a("code",[t._v("NSObject")]),t._v("这个类类型对象发送一个消息（调用器"),a("code",[t._v("alloc")]),t._v("实例方法）。")]),t._v(" "),a("p",[t._v("除了"),a("code",[t._v("isa")]),t._v("指针之外，"),a("code",[t._v("objc_class")]),t._v("结构体中还有一个变量"),a("code",[t._v("super_class")]),t._v("，它指向了是这个类的超类（super class），可以看到这个"),a("code",[t._v("super_class")]),t._v("不是一个一位数组，而是一个单独的指针，即一个类有且仅有一个 super class，即所谓的「单继承」。")]),t._v(" "),a("p",[t._v("关于"),a("code",[t._v("isa")]),t._v("和"),a("code",[t._v("super_class")]),t._v("的更直观描述，还请看图：")]),t._v(" "),a("e-img",{attrs:{src:"/image/class-diagram.png"}}),t._v(" "),a("p",[t._v("到了这里，Objective-C 的对象模型基本上解释清楚了；可能还有一个问题：最终的元类是啥？在 Cocoa 中，所有类都继承自"),a("code",[t._v("NSObject")]),t._v("，而"),a("code",[t._v("NSObject")]),t._v("的元类（不晓得叫什么名字，假设叫"),a("code",[t._v("NSObjectMetaClass")]),t._v("）（上图中右上角的方框）也继承自"),a("code",[t._v("NSObject")]),t._v("。有些绕，具体来说，"),a("code",[t._v("NSObject")]),t._v("和"),a("code",[t._v("NSObjectMetaClass")]),t._v("的"),a("code",[t._v("isa")]),t._v("指针和"),a("code",[t._v("super_class")]),t._v("指针指向情况是这样的：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("NSObject")]),t._v("的"),a("code",[t._v("isa")]),t._v("指针"),a("code",[t._v("NSObjectMetaClass")]),t._v("（终极 meta class），"),a("code",[t._v("NSObjectMetaClass")]),t._v("指针指向自己；")]),t._v(" "),a("li",[a("code",[t._v("NSObject")]),t._v("的"),a("code",[t._v("super_class")]),t._v("指针指向"),a("code",[t._v("nil")]),t._v("，"),a("code",[t._v("NSObjectMetaClass")]),t._v("的"),a("code",[t._v("super_class")]),t._v("指向"),a("code",[t._v("NSObject")]),t._v("；")])]),t._v(" "),a("p",[t._v("这样就完了？！No！Objective-C 的对象模型还有信息可挖，回过头来看"),a("code",[t._v("objc_class")]),t._v("的"),a("code",[t._v("ivars")]),t._v("变量和"),a("code",[t._v("methodLists")]),t._v("变量：")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("objc_class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("objc_ivar_list")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ivars"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("objc_method_list")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("methodLists"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在运行时，类（包括 class 和 metaclass）的"),a("code",[t._v("objc_class")]),t._v("结构体是固定的，不可能往这个结构体中添加数据，只能修改！譬如可以修改"),a("code",[t._v("isa")]),t._v("指针，让它指向一个中间类；在我的理解里，应该也可以修改"),a("code",[t._v("ivars")]),t._v("和"),a("code",[t._v("methodLists")]),t._v("，让它们指向一个新的区域；若可以这样，那么就可以在运行时随意添加/修改/删除成员变量和方法了。")]),t._v(" "),a("p",[t._v("但是，貌似 Objective-C Runtime 没有提供修改"),a("code",[t._v("ivars")]),t._v("和"),a("code",[t._v("methodLists")]),t._v("指针值的接口。")]),t._v(" "),a("p",[t._v("也因此，"),a("code",[t._v("ivars")]),t._v("在运行时指向的是一个固定区域，当然可以修改这个区域的值了，但这其实只是修改成员变量值而已；「在这个内存区域后面续上一段空余区域用于存放新的成员变量」？呵呵，想多了吧！因此，我们没办法在运行时为对象添加成员变量，这解释了为什么 category 中不能定义 property（dynamic property 不算）；")]),t._v(" "),a("p",[t._v("P.S: 那为什么 protocol 中可以添加变量，在我的理解里，protocol 是在编译器处理的。所以"),a("code",[t._v("objc_class")]),t._v("中有一个变量叫"),a("code",[t._v("protocols")]),t._v("；")]),t._v(" "),a("p",[t._v("和"),a("code",[t._v("ivars")]),t._v("不同，"),a("code",[t._v("methodLists")]),t._v("是一个二维数组。虽然我们没办法扩展"),a("code",[t._v("methodLists")]),t._v("指向的内存区域，但是我们可以改变这个内存区域（这个内存区域存储的都是指针）的值。因此，我们可以在运行时动态添加（以及做其他的处理，譬如交换等）方法！")]),t._v(" "),a("p",[t._v("P.S: "),a("code",[t._v("objc_class")]),t._v("结构体中还有一个变量"),a("code",[t._v("cache")]),t._v("，顾名思义，它是用于缓存的，缓存啥呢？缓存方法，下一篇博客阐述「消息传递机制」时会谈到这个。")]),t._v(" "),a("p",[t._v("到了这里，谁还敢说 Objective-C 不是动态语言？")])],1)}),[],!1,null,null,null);s.default=n.exports}}]);