(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{119:function(a,t,s){"use strict";s.r(t);var e=s(0),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("在 App 中使用 Web 代替一些 Native UI 已经成为移动客户端开发的一种思潮。在 App 中嵌入 Web 有一个重要的基础问题：Objective-C 和 JavaScript 的交互。")]),a._v(" "),s("p",[a._v("近期的项目需要，笔者开始着手这方面的问题学习。很容易想到：一定存在某个引擎能够在 OC 和 JS 之间转换。去 github 中搜索关键字"),s("code",[a._v("iOS JavaScript")]),a._v("得到的选择并不多，第三方库"),s("a",{attrs:{href:"https://github.com/marcuswestin/WebViewJavascriptBridge",target:"_blank",rel:"noopener noreferrer"}},[a._v("WebViewJavascriptBridge"),s("OutboundLink")],1),a._v("的 Stars 遥遥领先，自然选择它作为 OC 和 JS 的交互引擎了。")]),a._v(" "),s("p",[a._v("本文是笔者了解 WebViewJavascriptBridge 过程中的一些学习记录，好记性不如烂笔头嘛！")]),a._v(" "),s("h2",{attrs:{id:"使用-webviewjavascriptbridge"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-webviewjavascriptbridge"}},[a._v("#")]),a._v(" 使用 WebViewJavascriptBridge")]),a._v(" "),s("p",[a._v("WebViewJavascriptBridge 的使用不难，"),s("a",{attrs:{href:"https://github.com/marcuswestin/WebViewJavascriptBridge",target:"_blank",rel:"noopener noreferrer"}},[a._v("WebViewJavascriptBridge"),s("OutboundLink")],1),a._v("提供的 Example 比较直观的展示了各种接口的使用。")]),a._v(" "),s("p",[a._v("App 中嵌入 Web 一般需要使用 UIWebView（除非你自己写一个），WebViewJavascriptBridge 正是配合 UIWebView 进行工作的。")]),a._v(" "),s("p",[s("strong",[a._v("初始化")])]),a._v(" "),s("p",[a._v("和其他第三库一样，使用 WebViewJavascriptBridge 需要做一些初始化，只是 WebViewJavascriptBridge 的初始化包括两部分：「Objective-C 初始化」和「JavaScript 初始化」。")]),a._v(" "),s("ul",[s("li",[a._v("OC 初始化")])]),a._v(" "),s("p",[a._v("OC 中初始化 WebViewJavascriptBridge 的前提是存在一个 UIWebView 对象，每个 WebViewJavascriptBridge 对象都应该与一个 UIWebView 对象绑定。")]),a._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 创建UIWebView对象")]),a._v("\nUIWebView "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" webView "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("UIWebView alloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" initWithFrame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("view"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("bounds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 配置logging")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("WebViewJavascriptBridge enableLogging"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 创建WebViewJavascriptBridge对象并与UIWebView对象绑定")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("bridge "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    WebViewJavascriptBridge"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" bridge "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("WebViewJavascriptBridge bridgeForWebView"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("webView\n                              webViewDelegate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("self")]),a._v("\n                                      handler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("id data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" WVJBResponseCallback responseCallback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                                          "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// do something")]),a._v("\n                                          "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// responseCallback(responseData)")]),a._v("\n                                      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    bridge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("使用类方法创建一个 WebViewJavascriptBridge 对象，其中有一个"),s("code",[a._v("block")]),a._v("类型的 handler。这个 handler 用来处理来自于 JavaScript 发送的消息，"),s("strong",[a._v("handler 的形参与 JavaScript 中的 send 方法的形参对应")]),a._v("，一般有两个参数，第一个参数是 JS send 传入的参数（可以是任意类类型），第二个是 JS send 传入的回调 handler。")]),a._v(" "),s("p",[a._v("P.S：看客可能像我当初一样不太理解第二个参数：responseCallback，后文会对此进行详细说明。")]),a._v(" "),s("ul",[s("li",[a._v("JS 初始化")])]),a._v(" "),s("p",[a._v("除了 OC 外，JS 中也得执行针对 WebViewJavascriptBridge 的初始化代码。这意味着，除了客户端（iOS 开发人员）外，服务端（后端写 JS 的开发人员）也得对 WebViewJavascriptBridge 有所了解。好在需要理解的内容不多，十分钟就可以搞定。JavaScript 对 WebViewJavascriptBridge 初始化过程（这部分代码几乎是固定的）如下：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 创建了一个connectWebViewJavascriptBridge方法，该方法名是固定的")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("connectWebViewJavascriptBridge")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("WebViewJavascriptBridge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("WebViewJavascriptBridge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'WebViewJavascriptBridgeReady'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("WebViewJavascriptBridge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 调用connectWebViewJavascriptBridge方法")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("connectWebViewJavascriptBridge")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("bridge")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    bridge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" responseCallback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// do something")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("responseCallback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("responseData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("先创建了一个 connectWebViewJavascriptBridge 方法，该方法注册了一个 WebViewJavascriptBridgeReady 事件，同时声明了一个全局的 WebViewJavascriptBridge 变量，这样我们可以在外部通过 WebViewJavascriptBridge 调用相关方法。")]),a._v(" "),s("p",[a._v("在"),s("code",[a._v("bridge.init")]),a._v("里面同样定义了一个匿名 function，这个 function 用来接收 Objective-C 里面通过 send 方法发送的消息的，参数与 OC 里的 send 方法参数对应。同样，一般有两个参数，第一个参数是 OC send 传入的参数（可以是任意类类型），第二个是 OC send 传入的回调 handler。")]),a._v(" "),s("p",[a._v("可以简单总结一下。初始化的根本目的是啥？\n根据我的理解，初始化的根本目的是：消息接收者定义"),s("code",[a._v("message handler")]),a._v("。")]),a._v(" "),s("p",[a._v("P.S：请记住"),s("code",[a._v("message handler")]),a._v("这个名词，后文会经常用到。")]),a._v(" "),s("p",[s("strong",[a._v("发送消息")])]),a._v(" "),s("p",[a._v("上述「初始化」操作的目的是为了确保 OC 和 JS 能够相互处理来自对方的消息。")]),a._v(" "),s("p",[a._v("除了「初始化」操作之外，WebViewJavascriptBridge 对发送消息也有所约束，这意味着 OC 和 JS 发送消息必须得遵守一定的格式。")]),a._v(" "),s("ul",[s("li",[a._v("OC 向 JS 发送消息")])]),a._v(" "),s("p",[a._v("OC 向 JS 发送消息，定义了两个用于「发送消息」的接口：")]),a._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// APIs")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("send"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("send"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("data responseCallback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("WVJBResponseCallback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("responseCallback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("两个接口的区别只是参数个数不同，参数 data 指的是「传给 JS 的参数」，responseCallback 参数是一个"),s("code",[a._v("block")]),a._v("，给 JS 发送消息后，JS 的"),s("code",[a._v("message handler")]),a._v("可能会返回一些值，responseCallback 就是用来处理***返回值***的。")]),a._v(" "),s("p",[a._v("P.S：data 可以为空；这里的「返回值」并不是非常准确的说法，只是一种参考「函数」的说法，准确来讲应该叫"),s("code",[a._v("response data")]),a._v("。")]),a._v(" "),s("ul",[s("li",[a._v("JS 向 OC 发送消息")])]),a._v(" "),s("p",[a._v("JS 向 OC 发送消息，WebViewJavascriptBridge 也定义了两种格式：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("bridge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\nbridge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("responseCallback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("responseData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("显然，无论是「OC 向 JS 发送消息」，还是「JS 向 OC 发送消息」，都有两种格式，含有"),s("code",[a._v("responseCallback")]),a._v("和不含"),s("code",[a._v("responseCallback")]),a._v("。")]),a._v(" "),s("p",[a._v("P.S：data 可以为空；")]),a._v(" "),s("p",[s("strong",[a._v("理解 responseCallback")])]),a._v(" "),s("p",[a._v("上文已经多次提到了"),s("code",[a._v("responseCallback")]),a._v("，可能是由于笔者对跨平台了解得比较少，也可能是对函数式编程了解不多，刚开始对"),s("code",[a._v("responseCallback")]),a._v("不甚理解。这一小段将对"),s("code",[a._v("responseCallback")]),a._v("进行详细阐述。")]),a._v(" "),s("p",[a._v("关于「消息处理」和「消息发送」，我是参考「函数定义」和「函数调用」这两个概念来理解的。「函数定义」定义了函数的具体工作（即说明这段代码块都干了些啥），「函数调用」指示执行具体代码块；根据我的理解，从概念上讲，「消息处理」对应「函数定义」，「消息发送」对应「函数调用」。")]),a._v(" "),s("p",[a._v("这段话非常啰嗦，但引入这么一种对应关系是为了更好说明"),s("code",[a._v("responseCallback")]),a._v("。")]),a._v(" "),s("p",[a._v("对于函数（广义上的「函数」，而不仅仅指 JavaScript function）来说，函数可能有返回值，也可能没有返回值。当有返回值时，调用者往往会定义变量接收返回值，方便之后使用返回值...而上文中反复出现的"),s("code",[a._v("responseCallback")]),a._v("有些类似于对函数返回值的处理，消息发送方向消息接收方发出一个消息，除了希望对方处理某些事情之外，可能还期待对方返回一些数据（"),s("code",[a._v("response data")]),a._v("），这些数据往往会在后续的处理中起作用。")]),a._v(" "),s("p",[a._v("因此，若「消息接收方」的"),s("code",[a._v("message handler")]),a._v("中可能有需要传给「消息发送方」的"),s("code",[a._v("response data")]),a._v("时，「消息发送方」还需要定义一个 handler 用来处理这些值，即所谓的"),s("code",[a._v("responseCallBack")]),a._v("。")]),a._v(" "),s("p",[a._v("P.S：为什么函数处理返回值使用"),s("code",[a._v("ret = aFunction(variable)")]),a._v("这样的格式，而这里使用"),s("code",[a._v("responseCallBack")]),a._v("处理呢？我想是因为这里处理的是两种不同语言，过程中难免存在类型转换，况且，还有可能是由于并发。")]),a._v(" "),s("p",[a._v("对于函数而言，若某个函数有返回值，但调用者不想要保存该返回值，此时往往不会定义变量接收该返回。这在大多属于语言中是被允许的。")]),a._v(" "),s("p",[a._v("对于 WebViewJavascriptBridge 也一样，「消息发送方」发送消息时，可以不传入 responseCallback 参数，表示对「消息接收方」的"),s("code",[a._v("response data")]),a._v("不 care。")]),a._v(" "),s("p",[a._v("在定义"),s("code",[a._v("message handler")]),a._v("时，在 handler 的"),s("code",[a._v("responseCallback(responseData)")]),a._v("好比函数中"),s("code",[a._v("return ret")]),a._v("。")]),a._v(" "),s("p",[a._v("P.S：在定义"),s("code",[a._v("message handler")]),a._v("时，并不要求一定有"),s("code",[a._v("responseCallback(responseData)")]),a._v("这么一句代码；只是个人觉得，有必要写上，哪怕没有任何"),s("code",[a._v("response data")]),a._v("需要返回，也得加上"),s("code",[a._v("responseCallback(null)")]),a._v("。类似于函数，若某个函数没有返回值，也没有显式调用"),s("code",[a._v("return")]),a._v("语句，在编译阶段，编译器也会帮助在末尾加上"),s("code",[a._v("return void")]),a._v("。")]),a._v(" "),s("p",[a._v("理清了"),s("code",[a._v("responseCallback")]),a._v("这个概念，就基本上算是学会使用 WebViewJavascriptBridge 了。")]),a._v(" "),s("p",[s("strong",[a._v("OC 和 JS 互相调用")])]),a._v(" "),s("p",[a._v("「OC 和 JS 互相调用」指的是 OC 和 JS 互相对应对方的 handler（block 或 function）。")]),a._v(" "),s("p",[a._v("笔者刚开始觉得啰嗦：既然「消息机制」能够解决 OC 和 JS 交互问题，为啥还需要 OC 和 JS 互相调用对方的 handler 呢？")]),a._v(" "),s("p",[a._v("我还没有找到比较权威的的说法，但这里也谈谈自己的一点理解。")]),a._v(" "),s("p",[a._v("先说「函数」，「函数」的本质不过是代码的一种组织结构，它使得代码块具有了更好的可读性，同时极大加强代码复用。")]),a._v(" "),s("p",[a._v("基于「消息机制」，我们可以尽可能实现任何基于文本交互。可以做的事情非常丰富，譬如「消息发送者」传入参数"),s("code",[a._v("1")]),a._v("，"),s("code",[a._v("message handler")]),a._v("执行 A 段代码，传入参数"),s("code",[a._v("2")]),a._v("，执行 B 段代码。但问题是：基于「消息机制」，OC 和 JS 之间的几乎所有交互任务都得写在"),s("code",[a._v("message handler")]),a._v("中。当交互任务变得复杂时，代码组织将是一种灾难（会充斥很长并且嵌套很深的"),s("code",[a._v("if")]),a._v("语句）。以消息的第一个参数 data 为例，有时候，data 可能是一个 URL 字符串，有时候可能是一个 JSON 字符串，有时候可能只是一个数值，光是解析这些参数，都需要一个非常复杂的"),s("code",[a._v("if")]),a._v("语句...写到这里，「在 OC 和 JS 中定义能被对方调用的 handler」的意义就不需要多讲了。")]),a._v(" "),s("p",[a._v("关于「OC 和 JS 互相调用」，WebViewJavascriptBridge 也定义了一些约束。约束包括两部分：定义 handler 的姿势，调用 handler 的姿势。")]),a._v(" "),s("p",[s("strong",[a._v("OC 定义和调用 JS handler")])]),a._v(" "),s("p",[a._v("所谓定义 handler，其实是向 bridge 注册一个 handler，如下：")]),a._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// API")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// - (void)registerHandler:(NSString *)handlerName handler:(WVJBHandler)handler")]),a._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// eg:")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("bridge registerHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('@"OCHandlerName"')]),a._v("\n                     handler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("id data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" WVJBResponseCallback responseCallback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                         "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// do something")]),a._v("\n                         "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("responseCallback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("responseData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("向 bridge 注册 handler 包括两部分内容：name 和 handler body。")]),a._v(" "),s("p",[a._v("调用 JS 的 handler 也简单，如下：")]),a._v(" "),s("div",{staticClass:"language-objectivec extra-class"},[s("pre",{pre:!0,attrs:{class:"language-objectivec"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// APIs")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// - (void)callHandler:(NSString *)handlerName;")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// - (void)callHandler:(NSString*)handlerName data:(id)data;")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// - (void)callHandler:(NSString*)handlerName data:(id)data responseCallback:(WVJBResponseCallback)responseCallback;")]),a._v("\n    \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// eg：")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("bridge callHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('@"JSHandlerName"')]),a._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[s("strong",[a._v("JS 定义和调用 OC handler")])]),a._v(" "),s("p",[a._v("在 JS 定义（注册）handler 的姿势如下：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("bridge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("registerHandler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"handlerName"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[a._v("responseData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("...")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("p",[a._v("调用 OC 的 handler 也简单，和 OC 调用 JS handler 类似。")]),a._v(" "),s("p",[a._v("。。。。。。")]),a._v(" "),s("p",[a._v("本文写得好啰嗦啊！")]),a._v(" "),s("h2",{attrs:{id:"本文参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本文参考"}},[a._v("#")]),a._v(" 本文参考")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/marcuswestin/WebViewJavascriptBridge",target:"_blank",rel:"noopener noreferrer"}},[a._v("WebViewJavascriptBridge - github"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"http://dxldy.iteye.com/blog/2078350?utm_source=tuicool",target:"_blank",rel:"noopener noreferrer"}},[a._v("《WebViewJavascriptBridge 使用说明（iOS）》"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"http://honglu.me/2014/09/27/WebViewJavascriptBridge%E4%BD%BF%E7%94%A8/",target:"_blank",rel:"noopener noreferrer"}},[a._v("《WebViewJavascriptBridge 使用》"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=n.exports}}]);