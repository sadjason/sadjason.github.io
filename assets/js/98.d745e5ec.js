(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{108:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("稍微了解 Mach-O 和 dyld 后，自然抑制不住重新梳理 Objective-C 底层知识的想法。OC 底层知识最核心的部分莫过于 runtime；所以本文的分析对象是 OC 的 runtime。OC runtime 源码是开放的，本文参考的版本是："),a("a",{attrs:{href:"https://opensource.apple.com/source/objc4/objc4-750/runtime",target:"_blank",rel:"noopener noreferrer"}},[t._v("objc4-750"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("blockquote",[a("p",[t._v("在分析过程中，若能将 objc-runtime 跑起来，岂不美哉？RetVal 大神制作了一份可以跑的 objc/runtime 工程："),a("a",{attrs:{href:"https://github.com/RetVal/objc-runtime/tree/objc.750",target:"_blank",rel:"noopener noreferrer"}},[t._v("RetVal/objc-runtime"),a("OutboundLink")],1),t._v("。")])]),t._v(" "),a("p",[t._v("objc/runtime 值得分析的点非常多，本文的分析主要围绕两个大问题进行：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("_objc_init")]),t._v("（runtime 的入口）是如何被调用的？")]),t._v(" "),a("li",[t._v("类的加载过程是怎么样的？")])]),t._v(" "),a("h1",{attrs:{id:"从-objc-init-说起"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从-objc-init-说起"}},[t._v("#")]),t._v(" 从 _objc_init 说起")]),t._v(" "),a("p",[a("code",[t._v("_objc_init")]),t._v("是 libobjc runtime 的入口函数，通过给 Xcode 工程设置"),a("code",[t._v("_objc_init")]),t._v("符号断点可以证明这一点：")]),t._v(" "),a("e-img",{attrs:{src:"/image/objc_init_breakpoint.png"}}),t._v(" "),a("p",[t._v("上图调用栈中，从 dyld 的入口函数"),a("code",[t._v("_dyld_start")]),t._v("开始，经过一系列周转，最终"),a("code",[t._v("_objc_init")]),t._v("被调用。")]),t._v(" "),a("h2",{attrs:{id:"objc-init-调用过程分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#objc-init-调用过程分析"}},[t._v("#")]),t._v(" _objc_init 调用过程分析")]),t._v(" "),a("p",[t._v("在开始分析"),a("code",[t._v("_objc_init")]),t._v("之前，得搞清楚这么一个问题："),a("code",[t._v("_objc_init")]),t._v("是如何被调用的？为啥抛出这么一个问题，上图调用链不是很明显吗？事实是，上图"),a("code",[t._v("libSystem_initializer")]),t._v("的调用逻辑稍微有些令人困惑，因为并没有在源码中找到对它的显式调用。关于这一疑点，没有在任何博客中找到解释。因此，本文略花篇幅围绕源码进行简单分析，所参考的源码包括：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://opensource.apple.com/source/dyld/dyld-635.2/",target:"_blank",rel:"noopener noreferrer"}},[t._v("dyld-635.2"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://opensource.apple.com/source/libdispatch/libdispatch-1008.220.2/",target:"_blank",rel:"noopener noreferrer"}},[t._v("libdispatch-1008.200.78"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://opensource.apple.com/source/Libsystem/Libsystem-1252/",target:"_blank",rel:"noopener noreferrer"}},[t._v("libsystem-1252"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://opensource.apple.com/source/objc4/objc4-750/",target:"_blank",rel:"noopener noreferrer"}},[t._v("objc4-750"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("通过分析 libsystem、libdispatch、objc 这几个 library 的源码，很快理清了这么一条调用栈：")]),t._v(" "),a("div",{staticClass:"language-raw extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("-> libSystem_initializer (定义于 libSystem 的 init.c)\n  -> libdispatch_init (定义于 libdispatch 的 queue.c)\n    -> _os_object_init (定义于 libdispatch 的 object.mm)\n      -> _objc_init (定义于 libobjc 的 objc-os.mm)\n")])])]),a("p",[t._v("而从上文截图的调用栈可以知道，"),a("code",[t._v("libSystem_initializer")]),t._v("是在"),a("code",[t._v("doModInitFunctions")]),t._v("中被调用的，后者定义于"),a("a",{attrs:{href:"https://opensource.apple.com/source/dyld/dyld-635.2/src/ImageLoaderMachO.cpp.auto.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ImageLoaderMachO.cpp"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("如上所述，"),a("code",[t._v("doModInitFunctions")]),t._v("中并没有显式调用"),a("code",[t._v("libSystem_initializer")]),t._v("的逻辑，如下是该函数源码的简化版：")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" ImageLoaderMachO"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doModInitFunctions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" LinkContext"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("uint32_t i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" cmd_count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" cmd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("cmd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" LC_SEGMENT_COMMAND "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("macho_section")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" sect"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("sectionsStart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" sect "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" sectionsEnd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("sect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" uint8_t type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sect"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("flags "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" SECTION_TYPE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" S_MOD_INIT_FUNC_POINTERS "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            Initializer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" inits "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Initializer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sect"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("addr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" fSlide"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size_t j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              Initializer func "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" inits"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" dyld"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("gProcessInfo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("libSystemInitialized "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" installPath "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstallPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("installPath "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strcmp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("installPath"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LIBSYSTEM_DYLIB_PATH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                  dyld"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("throwf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"initializer in image (%s) that does not link with libSystem.dylib\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" this"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n              bool haveLibSystemHelpersBefore "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dyld"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("gLibSystemHelpers "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("argv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("envp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apple"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("programVars"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n              bool haveLibSystemHelpersAfter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dyld"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("gLibSystemHelpers "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("haveLibSystemHelpersBefore "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" haveLibSystemHelpersAfter "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// now safe to use malloc() and other calls in libSystem.dylib")]),t._v("\n                dyld"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("gProcessInfo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("libSystemInitialized "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" true"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n              "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这个函数要做的事情很直接，找到镜像中"),a("code",[t._v("flags")]),t._v("字段匹配"),a("code",[t._v("S_MOD_INIT_FUNC_POINTERS")]),t._v("的 section，这种类型的 section 存储函数指针，dyld 遍历这些函数指针并调用。")]),t._v(" "),a("p",[t._v("不出意外，libSystem.dylib 中就有 flags 为"),a("code",[t._v("S_MOD_INIT_FUNC_POINTERS")]),t._v("的 section，可以使用 MachOView 或者 otool 工具查看确认：")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("$ otool -l /usr/lib/libSystem.dylib\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nSection\n  sectname __mod_init_func\n   segname __DATA\n      addr 0x0000000000002218\n      size 0x0000000000000008\n    offset "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8728")]),t._v("\n     align "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("^3 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    reloff "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    nreloc "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n     flags 0x00000009\n reserved1 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n reserved2 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),a("p",[t._v("上述 0x09 对应的值即"),a("code",[t._v("S_MOD_INIT_FUNC_POINTERS")]),t._v("，顾名思义，它表示该字段存储的是函数指针，这些函数指针在模块（镜像）被加载时调用。")]),t._v(" "),a("p",[t._v("对于 libSystem.dylib 而言，该 section 名为"),a("code",[t._v("__mod_init_func")]),t._v("（一般都是这个名字），存储了一个函数指针，该函数指针恰好对应"),a("code",[t._v("_libSystem_initializer")]),t._v("符号。当"),a("code",[t._v("libSystem_initializer")]),t._v("被调用时，dyld 会对"),a("code",[t._v("gProcessInfo->libSystemInitialized")]),t._v("进行标记，表示 libSystem 已经被初始化。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("补充说明")]),t._v(" "),a("p",[t._v("如何确保自定义函数被编译到"),a("code",[t._v("__mod_init_func")]),t._v("中呢？一种常见的做法是对函数标记"),a("code",[t._v("__attribute__((constructor))")]),t._v("。")]),t._v(" "),a("p",[t._v("libSystem 的初始化是一个内部行为，dyld 是如何知道它被初始化的呢？libSystem 是一个特殊的 dylib，默认情况下会被所有可执行文件所依赖，dyld 为它单独提供了一个 API："),a("code",[t._v("_dyld_initializer")]),t._v("，当 libSystem 被初始化时，会调用该函数，进而 dyld 内部就知道了 libSystem 被初始化了。")])]),t._v(" "),a("p",[t._v("OK，搞清楚"),a("code",[t._v("libSystem_initializer")]),t._v("的调用逻辑，强行对"),a("code",[t._v("_objc_init")]),t._v("的调用链分析收个尾。接下来看看"),a("code",[t._v("_objc_init")]),t._v("做了些什么...")]),t._v(" "),a("h2",{attrs:{id:"objc-init-逻辑分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#objc-init-逻辑分析"}},[t._v("#")]),t._v(" _objc_init 逻辑分析")]),t._v(" "),a("p",[t._v("如下是"),a("code",[t._v("_objc_init")]),t._v("的源码，非常短：")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_objc_init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" bool initialized "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" false"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initialized"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    initialized "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" true"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fixme defer initialization until an objc-using image is found?")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("environ_init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tls_init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("static_init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock_init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exception_init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_dyld_objc_notify_register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("map_images"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" load_images"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unmap_image"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("该函数做了两件事，首先进行一系列的初始化，本文不对这些初始化展开（其实也说不太清除）；其次调用"),a("code",[t._v("_dyld_objc_notify_register")]),t._v("注册，它是关键。")]),t._v(" "),a("p",[a("code",[t._v("_dyld_objc_notify_register")]),t._v("是 dyld 为 libobjc 提供的一个钩子，用来注册 handlers：")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Note: only for use by objc runtime")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Register handlers to be called when objc images are mapped, unmapped, and initialized.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Dyld will call back the "mapped" function with an array of images that contain an objc-image-info section.')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Those images that are dylibs will have the ref-counts automatically bumped, so objc will no longer need to")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// call dlopen() on them to keep them from being unloaded.  During the call to _dyld_objc_notify_register(),")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// dyld will call the "mapped" function with already loaded objc images.  During any later dlopen() call,')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// dyld will also call the "mapped" function.  Dyld will call the "init" function when dyld would be called')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// initializers in that image.  This is when objc calls any +load methods in that image.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_dyld_objc_notify_register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_dyld_objc_notify_mapped    mapped"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                _dyld_objc_notify_init      init"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                _dyld_objc_notify_unmapped  unmapped"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("当 dyld 完成对镜像的符号绑定时，镜像状态变为"),a("code",[t._v("dyld_image_state_bound")]),t._v("， dyld 会针对 OC 镜像，调用 libobjc 注册的 mapped handler，对镜像进行 objc 层次的处理；此后，dyld 对镜像进行初始化，触发 init handler 的调用；而 remove 镜像操作触发 unmapped handler 的调用。")]),t._v(" "),a("blockquote",[a("p",[t._v("dyld 如何判断 OC 镜像呢？不同版本的 dyld 处理逻辑不同，本文所参考的 dyld，会根据镜像是否含有"),a("code",[t._v("__objc_image_info")]),t._v(" section 来判断它是否是 OC 镜像。")])]),t._v(" "),a("p",[t._v("从 objc/runtime 内部来看，mapped 和 init 这俩 handler 分别对应"),a("code",[t._v("map_images()")]),t._v("和"),a("code",[t._v("load_images()")]),t._v("函数，在"),a("code",[t._v("map_images")]),t._v("中，runtime 完成了对镜像的类的构建，它是本文分析的重点。"),a("code",[t._v("load_images")]),t._v("逻辑相对比较简单，所做的事情主要是调用"),a("code",[t._v("+load")]),t._v("方法。")]),t._v(" "),a("h1",{attrs:{id:"从-mach-o-视角看类结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从-mach-o-视角看类结构"}},[t._v("#")]),t._v(" 从 Mach-O 视角看类结构")]),t._v(" "),a("p",[t._v("在分析类的构建过程之前，先站在 Mach-O 的视角窥视静态状态下的类结构。")]),t._v(" "),a("p",[t._v("Mach-O 是如何组织类信息的呢？源码中的类信息是内聚在一起的，类和类元素（方法、成员变量等）有着比较清晰的包含关系，但落实到二进制数据组织上，信息分散得比较厉害，下图截自某个 Mach-O 文件中描述 OC 类信息的片区：")]),t._v(" "),a("e-img",{attrs:{src:"/image/objc-in-macho.png"}}),t._v(" "),a("p",[t._v("下表对这些 section 简单描述一下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Section Name")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("__objc_imageinfo")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("记录 Objective-C 环境信息等，dyld 用它来判断镜像是否是 objc 镜像")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("__objc_classlist")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("记录镜像所定义的类，每个条目都是一个指针，指向到 __objc_data section")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("__objc_data")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("存放真正的类数据，和 __objc_classlist 条目呼应")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("__objc_classname")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("类名列表")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("__objc_methodname")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("方法名列表")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("__objc_methodtype")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("方法类型列表")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("__objc_selrefs")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("selector 列表信息，每个条目是指向到 __objc_methname 的指针，记录 selector 的名字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("__objc_classrefs")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("类引用列表")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("__objc_ivar")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("类的成员变量列表")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("__objc_const")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("存放类的元数据，包括：method list、variable list、property list、class info")])])])]),t._v(" "),a("p",[t._v("如何知道一个镜像定义了多少个类？可以从"),a("code",[t._v("__objc_classlist")]),t._v(" section 知晓，它是一个列表，每一项是一个指针，对应镜像定义的某个类，指针指向到"),a("code",[t._v("__objc_data")]),t._v(" section。"),a("code",[t._v("__objc_data")]),t._v("中的条目长度是固定的：40 bytes（64 位架构）；在 runtime 阶段，libobjc 根据"),a("code",[t._v("__objc_classlist")]),t._v("对"),a("code",[t._v("__objc_data")]),t._v(" section 进行解析，解析所使用的结构体是"),a("code",[t._v("objc_class")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("objc_class")]),t._v("继承自"),a("code",[t._v("objc_object")]),t._v("，如下：")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("objc_object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    isa_t isa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("objc_object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("objc_class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" objc_object "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Class ISA;")]),t._v("\n    Class superclass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cache_t cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// formerly cache pointer and vtable")]),t._v("\n    class_data_bits_t bits"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// class_rw_t * plus custom rr/alloc flags")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("objc_class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("Runtime 定义了各种各样的数据结构描述类和相关元素，其中部分数据结构是用户可见的，除了"),a("code",[t._v("objc_object")]),t._v("、"),a("code",[t._v("objc_class")]),t._v("，还有："),a("code",[t._v("objc_selector")]),t._v("、"),a("code",[t._v("method_t")]),t._v("、"),a("code",[t._v("objc_ivar")]),t._v("、"),a("code",[t._v("objc_property")]),t._v("、"),a("code",[t._v("objc_category")]),t._v("，另外很多数据结构于用户而言是不可见的，譬如"),a("code",[t._v("classref")]),t._v("、"),a("code",[t._v("class_rw_t")]),t._v("等。本文只在需要的时候对结构体展开分析，如无必要，一带而过。")])]),t._v(" "),a("p",[a("code",[t._v("objc_object")]),t._v("用来描述 OC 中的实例，当用口语描述实例时，总会说「XX 类的实例 x」或「x 是 XX 的实例」；"),a("code",[t._v("objc_object")]),t._v("的"),a("code",[t._v("isa")]),t._v("在程序结构上表达类似的含义，它指向了该实例所对应的类，类在 runtime 中被描述成"),a("code",[t._v("objc_class")]),t._v("结构。")]),t._v(" "),a("p",[a("code",[t._v("objc_class")]),t._v("继承自"),a("code",[t._v("objc_object")]),t._v("，所以它也有"),a("code",[t._v("isa")]),t._v("指针，指向到它的元类，对于元类而言，类本身也是一个对象；"),a("code",[t._v("objc_class")]),t._v("的"),a("code",[t._v("superclass")]),t._v("成员变量指向该类的父类；"),a("code",[t._v("isa")]),t._v("和"),a("code",[t._v("superclass")]),t._v("这两个成员变量在继承链中扮演着关键作用，满足了类的继承关系的构建，针对它们进行分析的资料太多了，本文不再赘述。"),a("code",[t._v("cache")]),t._v("成员变量与优化有关，譬如缓存最近命中的方法等。对于"),a("code",[t._v("bits")]),t._v("字段，通过它，可以找到类的其他描述信息，包括类名、方法、成员变量等。")]),t._v(" "),a("p",[a("code",[t._v("bits")]),t._v("的类型"),a("code",[t._v("class_data_bits_t")]),t._v("是一个结构体，只有一个也叫"),a("code",[t._v("bits")]),t._v("的成员变量，对于 64 位机器架构，它有 64 bits，低二位用于描述 Swift 版本，"),a("code",[t._v("bit[3]")]),t._v("描述当前类或者父类是否有默认的"),a("code",[t._v("retain")]),t._v("、"),a("code",[t._v("release")]),t._v("、"),a("code",[t._v("autorelease")]),t._v("、"),a("code",[t._v("retainCount")]),t._v("、"),a("code",[t._v("_tryRetain")]),t._v("、"),a("code",[t._v("_isDeallocating")]),t._v("、"),a("code",[t._v("retainWeakReference")]),t._v("、"),a("code",[t._v("allowsWeakReference")]),t._v("系列方法。"),a("code",[t._v("bits[3:47]")]),t._v("描述的是指向到 class data 的指针，高 17 位是保留区，如下：")]),t._v(" "),a("e-img",{attrs:{src:"/image/class_data_bits_t.png"}}),t._v(" "),a("p",[t._v("初始状态下，class data 的指针指向到镜像的"),a("code",[t._v("__objc_const")]),t._v("区域，该区域的其中一部分存储类的元数据，如下：")]),t._v(" "),a("e-img",{attrs:{src:"/image/class-info-in-macho.png"}}),t._v(" "),a("p",[t._v("Runtime 对上图数据的解析使用"),a("code",[t._v("class_ro_t")]),t._v("结构体，该结构体于用户而言是不可见的，定义如下：")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("class_ro_t")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    uint32_t flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 杂项")]),t._v("\n    uint32_t instanceStart"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 与健壮性有关")]),t._v("\n    uint32_t instanceSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 与健壮性有关")]),t._v("\n    uint32_t reserved"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 保留")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" uint8_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" ivarLayout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类名")]),t._v("\n    method_list_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" baseMethodList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方法列表")]),t._v("\n    protocol_list_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" baseProtocols"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 协议列表")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ivar_list_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" ivars"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实例变量")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" uint8_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" weakIvarLayout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    property_list_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("baseProperties"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ...... */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("__objc_const")]),t._v("的 class info 条目（"),a("code",[t._v("class_ro_t")]),t._v("实例）的成员变量，大部分都是指针，分别描述类名、方法列表、协议列表等，从 Mach-O 视角来看，这些指针指向到"),a("code",[t._v("__objc_classname")]),t._v("、"),a("code",[t._v("__objc_const")]),t._v(" method list、"),a("code",[t._v("__objc_const")]),t._v(" variable list、"),a("code",[t._v("__objc_const")]),t._v(" protocol list 等等，而它们又通过指针将触角伸到其他以"),a("code",[t._v("__objc")]),t._v("为前缀的 section。")]),t._v(" "),a("p",[t._v("综上，可以看到，在编译阶段，编译器就对 OC 类结构的基本信息进行了整理，只是这些信息比较分散，零散分布到各种以"),a("code",[t._v("__objc")]),t._v("为前缀的 section 中。libobjc 在 runtime 阶段，特别重要的一项工作是：将 Mach-O 中以"),a("code",[t._v("__objc")]),t._v("为前缀的零散 section 信息提取出来进行再加工结构化。")]),t._v(" "),a("h1",{attrs:{id:"类的加载过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类的加载过程"}},[t._v("#")]),t._v(" 类的加载过程")]),t._v(" "),a("p",[t._v("从函数"),a("code",[t._v("map_images()")]),t._v("开始分析类的加载过程，调用栈如下：")]),t._v(" "),a("div",{staticClass:"language-raw extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("map_images\n  -> map_images_nolock\n    -> _read_images\n")])])]),a("p",[t._v("类的主要加载过程在"),a("code",[t._v("_read_images()")]),t._v("完成，做了如下事情：")]),t._v(" "),a("ul",[a("li",[t._v("discover classes. 即从镜像提取类信息，并存到名为"),a("code",[t._v("allocatedClasses")]),t._v("的全局 hash table 中")]),t._v(" "),a("li",[t._v("remap classes. 重新调整类之间的引用")]),t._v(" "),a("li",[t._v("fix up selector references. 提取方法，并注册到名为"),a("code",[t._v("namedSelectors")]),t._v("的全局 map table 中")]),t._v(" "),a("li",[t._v("fix up objc_msgSend_fixup")]),t._v(" "),a("li",[t._v("discover protocols. 提取 protocols，存储到全局 map table")]),t._v(" "),a("li",[t._v("fix up @protocol references. 和类一样，protocol 也有继承关系，此过程 fixup 它们的依赖关系")]),t._v(" "),a("li",[t._v("realize non-lazy classes. realize 含有"),a("code",[t._v("+load")]),t._v("方法或者静态实例的类")]),t._v(" "),a("li",[t._v("realize future classes. realize 含有"),a("code",[t._v("RO_FUTURE")]),t._v("标识的类，这些类一般是 Core Foundation 中的类")]),t._v(" "),a("li",[t._v("discover categories. 提取 categories，存储到全局 map table")])]),t._v(" "),a("p",[t._v("上述过程最值得研究的莫过于 realize。")]),t._v(" "),a("p",[t._v("笔者并没有找到权威的资料来解释 realize 的含义，只能根据对源码的理解自说自话。OC 类在被使用之前（譬如调用类方法），需要进行一系列的初始化，譬如：指定 superclass、指定 isa 指针、attach categories 等等；libobjc 在 runtime 阶段就可以做这些事情，但是有些过于浪费，更好的选择是懒处理，这一举措极大优化了程序的执行速度。而 runtime 把对类的这些惰性初始化过程称为「realize」。")]),t._v(" "),a("p",[t._v("对于用户定义的大部分类的 realize 处理，是在类第一次被使用时进行的；但对于某些类，需要在 runtime 阶段就进行 realize 处理；其一是 non-lazy classes，包括含有"),a("code",[t._v("+load")]),t._v("方法的类，以及含有静态实例（譬如单例）的类；其二是 future classes，笔者也不太理解这个概念，但貌似是为 Core Foundation 中定义的类服务的。")]),t._v(" "),a("p",[t._v("接下来的重点是分析 realize 做了哪些事情，realize class 的主要逻辑发生在"),a("code",[t._v("realizeClass()")]),t._v("中，如下是其逻辑代码的简化版本：")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/***********************************************************************\n* realizeClass\n* Performs first-time initialization on class cls, \n* including allocating its read-write data.\n* Returns the real class structure for the class. \n* Locking: runtimeLock must be write-locked by the caller\n**********************************************************************/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" Class "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("realizeClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Class cls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 分配可读写的 class_rw_t 来替换 class_ro_t")]),t._v("\n    rw "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("class_rw_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calloc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("class_rw_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    rw"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("ro "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ro"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    rw"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("flags "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RW_REALIZED"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("RW_REALIZING"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cls"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    isMeta "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ro"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("flags "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" RO_META"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 设置 class 的 index")]),t._v("\n    cls"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chooseClassArrayIndex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. realize and fixup superclass and metaclass")]),t._v("\n    supercls "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("realizeClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("remapClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cls"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("superclass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    metacls "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("realizeClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("remapClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cls"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ISA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cls"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("superclass "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" supercls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cls"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("initClassIsa")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("metacls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4. 将自身添加到 superclass 的 subclass 列表")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("supercls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addSubclass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("supercls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addRootClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5. 将 class_ro_t 和 category 中的 methods、protocols、properties，添加到 class_rw_t 中")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("methodizeClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("关键代码是：")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. 分配可读写的 class_rw_t 来替换 class_ro_t")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.1 创建 class_rw_t 结构体")]),t._v("\nrw "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("class_rw_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calloc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("class_rw_t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.2 挂载 class_ro_t 到 class_rw_t")]),t._v("\nrw"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("ro "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ro"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.3 设置 flags，表示该 class 已经被 realize 了")]),t._v("\nrw"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("flags "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RW_REALIZED"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("RW_REALIZING"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.4 将 cls 的 data 指针指向到 rw")]),t._v("\ncls"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("前文站在 Mach-O 的视角分析了类的结构，我们得知，objc_class 的 data 指针最开始指向"),a("code",[t._v("class_ro_t")]),t._v("结构体，它包含了类名、方法列表、属性列表、协议列表等信息；但在 realize 逻辑中，libobjc 创建了一个"),a("code",[t._v("class_rw_t")]),t._v("结构体，并将 data 指针指向到该结构体。")]),t._v(" "),a("p",[t._v("如何看待 libobjc 的这个设计呢？可以这么理解，"),a("code",[t._v("class_ro_t")]),t._v("包含的类信息（方法、属性、协议等）都是在编译期就可以确定的，暂且称为元信息吧，在之后的逻辑中，它们显然是不希望被改变的；后续在用户层，无论是方法还是别的扩展，都是在"),a("code",[t._v("class_rw_t")]),t._v("上进行操作，这些操作都不会影响类的元信息。")]),t._v(" "),a("p",[a("code",[t._v("class_rw_t")]),t._v("的定义如下：")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("class_rw_t")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    uint32_t flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 杂项")]),t._v("\n    uint32_t version"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" class_ro_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ro"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原始类信息")]),t._v("\n\n    method_array_t methods"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类列表")]),t._v("\n    property_array_t properties"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 属性列表")]),t._v("\n    protocol_array_t protocols"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 协议列表")]),t._v("\n\n    Class firstSubclass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一个子类")]),t._v("\n    Class nextSiblingClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 兄弟类")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("demangledName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    uint32_t index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("realize 作为 objc runtime 中类的懒加载机制，在类真正要使用时再去做相应的准备工作，为确保程序的快速启动发挥了很大的作用；利用已经被 realize 的类含有"),a("code",[t._v("RW_REALIZED")]),t._v("和"),a("code",[t._v("RW_REALIZING")]),t._v("标记的特点，可以为项目找出无用类：因为没有被使用的类，一定没有被 realized。")]),t._v(" "),a("h1",{attrs:{id:"load"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#load"}},[t._v("#")]),t._v(" +load")]),t._v(" "),a("p",[t._v("当 dyld 完成对 OC 镜像初始化时，会调用"),a("code",[t._v("load_images()")]),t._v("，它所做的工作比较简单，找出所有"),a("code",[t._v("+load")]),t._v("方法并调用：")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("load_images")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("path __unused"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("mach_header")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("mh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Discover load methods")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("prepare_load_methods")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" headerType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("mh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Call +load methods")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call_load_methods")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("prepare_load_methods()")]),t._v("遍历找出类的"),a("code",[t._v("+load")]),t._v("方法，并把它们添加到全局数组"),a("code",[t._v("loadable_classes")]),t._v("中；并找出 category 的"),a("code",[t._v("+load")]),t._v("方法，把它们添加到全局数组"),a("code",[t._v("loadable_categories")]),t._v("中。")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("schedule_class_load")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Class cls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 确保 superclass 的 +load 先加入")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("schedule_class_load")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cls"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("superclass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add_class_to_loadable_list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cls"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RW_LOADED"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("prepare_load_methods")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" headerType "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("mhdr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    classref_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("classlist "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_getObjc2NonlazyClassList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mhdr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("schedule_class_load")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("remapClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("classlist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// category 的 +load 被加入到全局数组 loadable_categories 中")]),t._v("\n    category_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("categorylist "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("_getObjc2NonlazyCategoryList")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mhdr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        category_t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" categorylist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        Class cls "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("remapClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cat"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("cls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("realizeClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add_category_to_loadable_list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call_load_methods")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    bool more_categories"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. Repeatedly call class +loads until there aren't any more")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("loadable_classes_used "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call_class_loads")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. Call category +loads ONCE")]),t._v("\n        more_categories "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call_category_loads")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. Run more +loads if there are classes OR more untried categories")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("loadable_classes_used "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("  more_categories"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("从这段代码，可以梳理出我们所熟悉的"),a("code",[t._v("+load")]),t._v("调用顺序：")]),t._v(" "),a("ul",[a("li",[t._v("父类的"),a("code",[t._v("+load")]),t._v("一定比子类的"),a("code",[t._v("+load")]),t._v("早被调用")]),t._v(" "),a("li",[t._v("主类的"),a("code",[t._v("+load")]),t._v("一定比分类的"),a("code",[t._v("+load")]),t._v("早被调用")])]),t._v(" "),a("p",[a("code",[t._v("+load")]),t._v("的源码相对较简单，左神的博客"),a("a",{attrs:{href:"https://draveness.me/load",target:"_blank",rel:"noopener noreferrer"}},[t._v("你真的了解 load 方法么？"),a("OutboundLink")],1),t._v("有更丰富的分析...")]),t._v(" "),a("h1",{attrs:{id:"更多阅读"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更多阅读"}},[t._v("#")]),t._v(" 更多阅读")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://draveness.me/load",target:"_blank",rel:"noopener noreferrer"}},[t._v("你真的了解 load 方法么？"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://draveness.me/method-struct",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入解析 ObjC 中方法的结构"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://cocoasamurai.blogspot.jp/2010/01/understanding-objective-c-runtime.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Understanding the Objective-C Runtime"),a("OutboundLink")],1)])])],1)}),[],!1,null,null,null);s.default=e.exports}}]);