(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{142:function(t,e,r){"use strict";r.r(e);var n=r(0),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("对于 JS 工程，抛开逻辑，单从代码格式来看，常使用 ESLint 和 Prettier 这两个工具进行优化。前者主要用来进行 Lint 检查，后者用来一键格式化。本文旨在记录 ESLint、Prettier 的实操体验，工程相关描述如下：")]),t._v(" "),r("ul",[r("li",[t._v("编辑器：Visual Studio Code")]),t._v(" "),r("li",[t._v("文件类型：.js、.vue")]),t._v(" "),r("li",[t._v("框架：Egg.js、Vue")])]),t._v(" "),r("h1",{attrs:{id:"eslint-和-prettier-简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#eslint-和-prettier-简介"}},[t._v("#")]),t._v(" ESLint 和 Prettier 简介")]),t._v(" "),r("p",[t._v("ESLint -- ES 大概指的是 EcmaScipt -- 是针对 JS 的语法规则和代码风格的检查工具，在 JS 的 Lint 工具里几乎是唯一的选择。ESLint 提供了各种各样的 rule，用户可以对这些 rule 进行配置，基于这些配置项，对 JS 工程或者单个文件进行 lint 检查，进而输出报告。")]),t._v(" "),r("p",[t._v("Prettier，官方描述是：「Prettier is an opinionated code formatter」，简单来说，可以用它来对工程或者单个文件进行代码格式化，它支持的文件类型包括：JS、TS、JSX、Vue、CSS 等。")]),t._v(" "),r("h2",{attrs:{id:"eslint-v-s-prettier"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#eslint-v-s-prettier"}},[t._v("#")]),t._v(" ESLint v.s Prettier")]),t._v(" "),r("p",[t._v("同时使用 ESLint 和 Prettier 会遇到很多冲突问题，如何处理好它们之间的冲突，理解它们的不同和各自特点是关键。本文从三个角度对它们进行对比说明：rule 角度、作用范围、功能特点。")]),t._v(" "),r("p",[t._v("首先是 rule 角度。二者都定义了很多 rule，并且存在很多重复；但是 ESLint 的 rule 比 Prettier 要丰富得多，它的 rule 类型包括两种：")]),t._v(" "),r("ul",[r("li",[t._v("格式化相关 rule：譬如空格相关、逗号相关、引号相关；这些代码特点对最终生成的字节码没有任何影响。")]),t._v(" "),r("li",[t._v("代码质量相关 rule：譬如无用变量、随意定义全局变量；这些代码特点会影响最终生成的字节码。")])]),t._v(" "),r("p",[t._v("而 Prettier 的 rule 都与格式化相关。")]),t._v(" "),r("p",[t._v("其次是作用范围。ESLint 作用范围是 JS 代码，Prettier 的作用范围包括 CSS、GraphQL 等。")]),t._v(" "),r("p",[t._v("最后是功能特点。ESLint 专注于全方位的 Lint 检查，Prettier 专注于代码格式化相关。")]),t._v(" "),r("p",[t._v("P.S:  ESLint 本身提供了一键修复 lint 问题代码的功能，但是功能并不是很强大，譬如针对单文件进行 format 比较费劲，无法针对选中区域进行 format，Prettier 可以解决这些问题，它是专门为 format 而生的工具。")]),t._v(" "),r("h1",{attrs:{id:"工程配置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#工程配置"}},[t._v("#")]),t._v(" 工程配置")]),t._v(" "),r("p",[t._v("本文所针对的工程包括两种："),r("a",{attrs:{href:"https://eggjs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Egg"),r("OutboundLink")],1),t._v("工程、"),r("a",{attrs:{href:"https://cn.vuejs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue"),r("OutboundLink")],1),t._v("工程；所针对的 IDE 或编辑器是：Visual Studio Code。")]),t._v(" "),r("h2",{attrs:{id:"关于-eslint"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关于-eslint"}},[t._v("#")]),t._v(" 关于 ESLint")]),t._v(" "),r("p",[t._v("对于 Egg 工程的 ESLint 配置，通常涉及的第三方工具包括：")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.npmjs.com/package/eslint",target:"_blank",rel:"noopener noreferrer"}},[t._v("ESLint package"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.npmjs.com/package/eslint-config-egg",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-config-egg"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint",target:"_blank",rel:"noopener noreferrer"}},[t._v("ESLint plugin for Visual Studio Code"),r("OutboundLink")],1)])]),t._v(" "),r("p",[t._v("对于 Vue 工程的 ESLint 配置，通常涉及的第三方工具包括：")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.npmjs.com/package/eslint",target:"_blank",rel:"noopener noreferrer"}},[t._v("ESLint package"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.npmjs.com/package/eslint-plugin-vue",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-plugin-vue"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.npmjs.com/package/eslint-loader",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-loader"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint",target:"_blank",rel:"noopener noreferrer"}},[t._v("ESLint plugin for Visual Studio Code"),r("OutboundLink")],1)])]),t._v(" "),r("p",[t._v("这两种工程所涉及的工具有些重叠，一共包括 5 个，接下来围绕这 5 个工具阐述各自的作用和使用姿势。")]),t._v(" "),r("h3",{attrs:{id:"eslint-package"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#eslint-package"}},[t._v("#")]),t._v(" ESLint package")]),t._v(" "),r("p",[t._v("ESLint package 是 ESLint 工具的主体，其余几个都是周边工具。")]),t._v(" "),r("p",[r("strong",[t._v("安装")])]),t._v(" "),r("p",[t._v("有两种安装姿势，全局安装和本地安装；显然本地安装更可取，其一，满足洁癖者的心理需求（尽可能避免全局污染），其二，团队协作开发更便于环境同步。另外，应该把安装配置项同步到 package.json 的 devDependencies 中，综上，安装姿势是：")]),t._v(" "),r("div",{staticClass:"language-sh extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[t._v("$ "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -D eslint\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or npm install --save-dev eslint")]),t._v("\n")])])]),r("p",[r("strong",[t._v(".eslintrc")])]),t._v(" "),r("p",[t._v("和其他大多数配置项比较丰富的工具一样，ESLint 也有一个配置文件，默认名"),r("code",[t._v(".eslintrc")]),t._v("或"),r("code",[t._v(".eslintrc.js")]),t._v("，简单来说，可以在"),r("code",[t._v(".eslintrc")]),t._v("里设置各种"),r("a",{attrs:{href:"https://eslint.org/docs/user-guide/configuring",target:"_blank",rel:"noopener noreferrer"}},[t._v("ESLint 配置"),r("OutboundLink")],1),t._v("。")]),t._v(" "),r("p",[r("strong",[t._v(".eslintignore")])]),t._v(" "),r("p",[t._v("有点类似于"),r("code",[t._v(".gitignore")]),t._v("文件，用于告诉 ESLint，lint 检查时忽略哪些文件或者哪个目录。")]),t._v(" "),r("p",[r("strong",[t._v("使用")])]),t._v(" "),r("p",[t._v("使用"),r("code",[t._v("npx eslint --help")]),t._v("就可以查看各种命令和作用了，常见如下：")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("npx eslint --init")]),t._v("交互式生成 ESLint 配置文件"),r("code",[t._v(".eslintrc.js")])]),t._v(" "),r("li",[r("code",[t._v("npx eslint yourfile.js")]),t._v("检查单个文件")])]),t._v(" "),r("h3",{attrs:{id:"eslint-config-egg"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#eslint-config-egg"}},[t._v("#")]),t._v(" eslint-config-egg")]),t._v(" "),r("p",[t._v("无论对于什么样的 JS 工程，都可以在"),r("code",[t._v(".eslintrc")]),t._v("里指定各种配置，但实际上大多数人不知道什么是好什么是坏，如果嫌麻烦，可以使用一些已有的配置项，常见包括：")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.npmjs.com/package/eslint-config-airbnb",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-config-airbnb"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/standard/eslint-config-standard",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-config-standard"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/google/eslint-config-google",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-config-google"),r("OutboundLink")],1)])]),t._v(" "),r("p",[t._v("使用这些 ESLint 扩展后，就可以省掉不少配置麻烦，对于 Egg.js，则提供了 eslint-config-egg，其中的规则我个人比较认同，使用姿势如下：")]),t._v(" "),r("div",{staticClass:"language-sh extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[t._v("$ "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -D eslint-config-egg  "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装eslint")]),t._v("\n\n// 在.eslintrc中配置\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"extends"')]),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"egg"')]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("h3",{attrs:{id:"eslint-plugin-vue"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#eslint-plugin-vue"}},[t._v("#")]),t._v(" eslint-plugin-vue")]),t._v(" "),r("p",[t._v("ESLint 处理的都是标准的 js 文件代码，处理 .vue 文件中的 js 代码比较捉急，为此，Vue 官方提供了一个官方插件：eslint-plugin-vue，使用姿势：")]),t._v(" "),r("div",{staticClass:"language-sh extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[t._v("$ "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -D eslint-plugin-vue\n\n// 在.eslintrc中配置\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"extends"')]),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugin:vue/strongly-recommended"')]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("p",[t._v("eslint-plugin-vue 的作用不仅仅是让.vue 文件中的 JS 代码块得到 lint 检查，更重要的是提供了对 vue 语法的 lint 支持，具备多种配置，详见"),r("a",{attrs:{href:"https://github.com/vuejs/eslint-plugin-vue",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-plugin-vue"),r("OutboundLink")],1),t._v("。")]),t._v(" "),r("h3",{attrs:{id:"eslint-loader"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#eslint-loader"}},[t._v("#")]),t._v(" eslint-loader")]),t._v(" "),r("p",[t._v("Vue CLI 是支持热更新的，即修改文件后触发 webpack 打包逻辑，使用 eslint-loader 能够让 webpack 工作前执行 ESLint 检查，从而主动 check。如何使用？参考"),r("a",{attrs:{href:"https://github.com/webpack-contrib/eslint-loader",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-loader"),r("OutboundLink")],1),t._v("。")]),t._v(" "),r("blockquote",[r("p",[t._v("不同的 Vue 工程，eslint-loader 的配置不同，本文 就不展开讲了。")])]),t._v(" "),r("h3",{attrs:{id:"eslint-plugin"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#eslint-plugin"}},[t._v("#")]),t._v(" ESLint plugin")]),t._v(" "),r("p",[t._v("VSCode 中的 plugin ESLint，其起到的作用是，让编辑器集成了 ESLint 功能，包括：")]),t._v(" "),r("ul",[r("li",[t._v("显式在编辑框中标注 lint 问题代码")]),t._v(" "),r("li",[t._v("在保存时触发 ESLint 检查")]),t._v(" "),r("li",[t._v("自动修复 lint 问题代码")])]),t._v(" "),r("p",[t._v("另外，让编辑器多了几个与 ESLint 相关的命令：")]),t._v(" "),r("ul",[r("li",[t._v("ESLint: Create ESLint configuration -- 创建 ESLint 配置文件，类似于"),r("code",[t._v("eslint --init")])]),t._v(" "),r("li",[t._v("ESLint: Disable ESLint -- 关闭 ESLint 插件功能")]),t._v(" "),r("li",[t._v("ESLint: Enable ESLint -- 开启 ESLint 插件功能")]),t._v(" "),r("li",[t._v("ESLint: Fix all auto-fixable Problems -- 一键修复 Lint 问题代码")])]),t._v(" "),r("p",[t._v("需要注意的是，ESLint plugin 和上文中提到的 ESLint package 并不冲突，它本身仍然立足于后者，只是针对编辑器环境做了一些功能扩展。换句话说，ESLint plugin 能正常使用的前提是：全局或者本地中，已经安装了 eslint 这个 package。")]),t._v(" "),r("h2",{attrs:{id:"关于-prettier"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关于-prettier"}},[t._v("#")]),t._v(" 关于 Prettier")]),t._v(" "),r("p",[t._v("和 ESLint 类似，使用 Prettier，会涉及到若干个工具：")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/prettier/prettier",target:"_blank",rel:"noopener noreferrer"}},[t._v("prettier package"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/prettier/prettier-vscode",target:"_blank",rel:"noopener noreferrer"}},[t._v("Prettier formatter for Visual Studio Code"),r("OutboundLink")],1)])]),t._v(" "),r("p",[t._v("下面分别对这些工具进行阐述。")]),t._v(" "),r("h3",{attrs:{id:"prettier-package"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#prettier-package"}},[t._v("#")]),t._v(" Prettier package")]),t._v(" "),r("p",[t._v("prettier package 是 prettier 系列工具的主体，一般建议本地 dev 环境下安装：")]),t._v(" "),r("div",{staticClass:"language-sh extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 本地 dev 环境下安装")]),t._v("\n$ "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -D prettier\n")])])]),r("p",[t._v("安装后，执行"),r("code",[t._v("npx prettier --help")]),t._v("或者查看https://prettier.io/docs/en/cli.html 搞清楚使用姿势，常用操作如下：")]),t._v(" "),r("div",{staticClass:"language-sh extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[t._v("$ npx prettier app.js               "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检查单个文件，问题文件内容会被输出到console中")]),t._v("\n$ npx prettier app/**/.js           "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检查多个文件")]),t._v("\n$ npx prettier app/**/.js -l        "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检查多个文件，问题文件的path会被输出到console中")]),t._v("\n$ npx prettier app/**/.js --write   "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检查多个文件，自动修复问题文件")]),t._v("\n")])])]),r("p",[r("strong",[t._v(".prettierrc")])]),t._v(" "),r("p",[t._v("Prettier 也有自己的配置文件，各种配置项参考"),r("a",{attrs:{href:"https://prettier.io/docs/en/options.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),r("OutboundLink")],1),t._v("。")]),t._v(" "),r("p",[r("strong",[t._v(".prettierignore")])]),t._v(" "),r("p",[t._v("类似于.gitignore，当处理目录下的多个文件（譬如"),r("code",[t._v("app/**/.js")]),t._v("）时，该文件下的文件、或目录会被忽略。")]),t._v(" "),r("h3",{attrs:{id:"prettier-plugin"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#prettier-plugin"}},[t._v("#")]),t._v(" Prettier plugin")]),t._v(" "),r("p",[t._v("Prettier 团队为 VSCode 开发了一个插件："),r("a",{attrs:{href:"https://github.com/prettier/prettier-vscode",target:"_blank",rel:"noopener noreferrer"}},[t._v("Prettier Plugin"),r("OutboundLink")],1),t._v("。和 ESLint Plugin 不同，Prettier Plugin 可以独立于 prettier package 使用，使用该插件，可以在 VSCode 中，使用命令或者快捷键快速对单个文件或者代码片段（选中区域）进行格式化:")]),t._v(" "),r("div",{staticClass:"language-raw extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("1. CMD + Shift + P -> Format Document\n\nOR\n\n1. Select the text you want to Prettify\n\n2. CMD + Shift + P -> Format Selection\n")])])]),r("p",[t._v("同样，使用 Prettier Plugin 提供的功能有些类似于"),r("code",[t._v("npx prettier some.js --write")]),t._v("，只是前者更强大些（毕竟能处理代码片段）；"),r("code",[t._v("npx prettier")]),t._v("的配置选项默认来自于 prettier 配置文件（譬如"),r("code",[t._v(".prettierrc")]),t._v("），prettier plugin 也类似，详见"),r("a",{attrs:{href:"https://github.com/prettier/prettier-vscode#settings",target:"_blank",rel:"noopener noreferrer"}},[t._v("prettier-vscode#settings"),r("OutboundLink")],1),t._v("。所以说，如果同时使用 prettier package 和 prettier plugin，可以共用一份配置文件，事实上，也应该这么干。")]),t._v(" "),r("p",[t._v("既然 prettier plugin 可以独立于 prettier  package 使用，后者是不是就没有存在的价值呢？或者说，工程项目中是否就应该省略"),r("code",[t._v("npm i -D prettier")]),t._v("呢？prettier package 是有存在价值呢，如果想把代码 format 纳入到 pr 管理中，在 CI 工具中，显然要用到它。")]),t._v(" "),r("p",[t._v("P.S: 测试发现，prettier plugin 无法感知"),r("code",[t._v(".prettierrc.js")]),t._v("中的配置，但是可以识别"),r("code",[t._v(".prettierrc")]),t._v("中的配置，这应该是个 bug。")]),t._v(" "),r("h2",{attrs:{id:"eslint-和-prettier-配合使用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#eslint-和-prettier-配合使用"}},[t._v("#")]),t._v(" ESLint 和 Prettier 配合使用")]),t._v(" "),r("p",[t._v("上文提到，ESLint 和 Prettier 有些重叠：")]),t._v(" "),r("ul",[r("li",[t._v("二者都定义了格式化相关 rule（formatting rules）")]),t._v(" "),r("li",[t._v("二者都有 fix 功能")])]),t._v(" "),r("p",[t._v("那么如何让二者配合工作呢？这会涉及到如下几个工具：")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://github.com/prettier/eslint-plugin-prettier",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-plugin-prettier"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/prettier/eslint-config-prettier",target:"_blank",rel:"noopener noreferrer"}},[t._v("eslint-config-prettier"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/prettier/prettier-eslint",target:"_blank",rel:"noopener noreferrer"}},[t._v("prettier-eslint"),r("OutboundLink")],1)])]),t._v(" "),r("p",[t._v("围绕这几个工具，阐述如何让 ESLint 和 Prettier 配合使用。")]),t._v(" "),r("h3",{attrs:{id:"eslint-plugin-prettier"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#eslint-plugin-prettier"}},[t._v("#")]),t._v(" eslint-plugin-prettier")]),t._v(" "),r("p",[t._v("eslint-plugin-prettier 是 Prettier 为 ESLint 开发的插件，使用它，可以在 eslint 中起到 prettier 检查，基本用法：")]),t._v(" "),r("div",{staticClass:"language-sh extra-class"},[r("pre",{pre:!0,attrs:{class:"language-sh"}},[r("code",[t._v("$ "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -D eslint-config-prettier  "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装")]),t._v("\n\n// .eslintrc\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugins"')]),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",  // 在eslint时启动prettier检查\n  "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rules"')]),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier/prettier"')]),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),t._v("  // prettier的lint的冲突会被ESLint当做错误处理\n  "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("h3",{attrs:{id:"eslint-config-prettier"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#eslint-config-prettier"}},[t._v("#")]),t._v(" eslint-config-prettier")]),t._v(" "),r("p",[t._v("上文提到，ESLint 与格式化相关的 rule 和 prettier 的 rule 有些重叠，如果想把格式化相关的事情都交给 prettier 去做，使用这个工具可以屏蔽掉 ESLint 与格式化相关的 rule。")]),t._v(" "),r("h3",{attrs:{id:"prettier-eslint"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#prettier-eslint"}},[t._v("#")]),t._v(" prettier-eslint")]),t._v(" "),r("p",[t._v("ESLint 本身有 fix 的功能，即"),r("code",[t._v("eslint --fix")]),t._v("，如果想让执行该功能的时候，也调用 prettier 的 fix 功能（即"),r("code",[t._v("prettier --write")]),t._v("），可以使用该工具。")]),t._v(" "),r("blockquote",[r("p",[t._v("个人初步判断认为，如果使用 VSCode，这个工具可用性并不高，ESLint plugin 和 Prettier plugin 已经足以满足基本需求了。")])])])}),[],!1,null,null,null);e.default=s.exports}}]);