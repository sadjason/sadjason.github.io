(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{150:function(t,r,a){"use strict";a.r(r);var e=a(0),_=Object(e.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("官网："),a("a",{attrs:{href:"https://www.dartlang.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.dartlang.org/"),a("OutboundLink")],1),t._v("\n中文网："),a("a",{attrs:{href:"http://dart.goodev.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://dart.goodev.org/"),a("OutboundLink")],1)]),t._v(" "),a("h1",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),a("p",[t._v("使用 HomeBrew 安装比较简单，此处略过。")]),t._v(" "),a("p",[t._v("dart: Executes the Dart script passed as\npub: Pub is a package for Dart")]),t._v(" "),a("h1",{attrs:{id:"语法概览"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法概览"}},[t._v("#")]),t._v(" 语法概览")]),t._v(" "),a("h2",{attrs:{id:"基本说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本说明"}},[t._v("#")]),t._v(" 基本说明")]),t._v(" "),a("ul",[a("li",[t._v("Dart 程序是有入口的：main 方法")]),t._v(" "),a("li",[t._v("一切皆对象；所有类都继承自 Object")]),t._v(" "),a("li",[t._v("Dart 没有 public、protected、private 关键字")]),t._v(" "),a("li",[t._v("Dart 是强类型的？")]),t._v(" "),a("li",[t._v("Dart 是一个对分号特别执着的语言")]),t._v(" "),a("li",[a("code",[t._v("??=")]),t._v("赋值操作符看起来挺好用")]),t._v(" "),a("li",[t._v("对 Function 可选参数的定义，我觉得特别好，非常清晰，有史以来最好")])]),t._v(" "),a("p",[t._v("一些疑问：")]),t._v(" "),a("ul",[a("li",[t._v("貌似没有协议？但是有抽象类")])]),t._v(" "),a("h2",{attrs:{id:"内置类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内置类型"}},[t._v("#")]),t._v(" 内置类型")]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://api.dartlang.org/stable/2.2.0/dart-core/num-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("num"),a("OutboundLink")],1),t._v(": 数值类型")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://api.dartlang.org/stable/dart-core/int-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("int"),a("OutboundLink")],1),t._v(": 整数值，其取值通常位于 -2^53 和 2^53 之间")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://api.dartlang.org/stable/2.2.0/dart-core/double-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("double"),a("OutboundLink")],1),t._v(": 64-bit (双精度) 浮点数，符合 IEEE 754 标准")]),t._v(" "),a("li",[t._v("int 和 double 都继承自 num，后者也仅有这么两个子类；编译器不允许用户定义继承 num 的类，也不允许基于 num 实现对象")])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://api.dartlang.org/stable/2.2.0/dart-core/bool-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("bool"),a("OutboundLink")],1),t._v(": 布尔值")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://api.dartlang.org/stable/2.2.0/dart-core/String-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("String"),a("OutboundLink")],1),t._v(": 字符串")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://api.dartlang.org/stable/2.2.0/dart-core/Runes-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Runes"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://api.dartlang.org/stable/2.2.0/dart-core/Symbol-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Symbol"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://api.dartlang.org/stable/2.2.0/dart-core/List-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("List"),a("OutboundLink")],1),t._v(": 数组")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://api.dartlang.org/stable/2.2.0/dart-core/Map-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Map"),a("OutboundLink")],1),t._v(": 字典")])]),t._v(" "),a("li",[a("p",[t._v("num")])]),t._v(" "),a("li",[a("p",[t._v("String")])]),t._v(" "),a("li",[a("p",[t._v("int")])]),t._v(" "),a("li",[a("p",[t._v("bool")])])]),t._v(" "),a("h2",{attrs:{id:"变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),a("h3",{attrs:{id:"默认值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#默认值"}},[t._v("#")]),t._v(" 默认值")]),t._v(" "),a("p",[t._v("没有初始化的变量自动获取一个默认值："),a("code",[t._v("null")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"可选类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可选类型"}},[t._v("#")]),t._v(" 可选类型")]),t._v(" "),a("p",[t._v("支持可选类型")]),t._v(" "),a("h3",{attrs:{id:"final-const"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#final-const"}},[t._v("#")]),t._v(" final & const")]),t._v(" "),a("ul",[a("li",[t._v("一个 final 变量只能赋值一次")]),t._v(" "),a("li",[t._v("一个 const 变量是编译时常量")]),t._v(" "),a("li",[t._v("const 变量同时也是 final 变量")])]),t._v(" "),a("h2",{attrs:{id:"字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),a("ul",[a("li",[t._v("既可以使用单引号（"),a("code",[t._v("'")]),t._v("），也可以使用双引号（"),a("code",[t._v('"')]),t._v("）")]),t._v(" "),a("li",[t._v("字符串插值使用"),a("code",[t._v("$variableName")]),t._v("或者"),a("code",[t._v("${expression}")])]),t._v(" "),a("li",[t._v("使用三个单引号（"),a("code",[t._v("'''")]),t._v("）或者双引号（"),a("code",[t._v('"')]),t._v("）可以创建多行字符串")])]),t._v(" "),a("h2",{attrs:{id:"控制语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#控制语句"}},[t._v("#")]),t._v(" 控制语句")]),t._v(" "),a("p",[t._v("除了 switch-case 语句有点新鲜，没啥特别的。")]),t._v(" "),a("h2",{attrs:{id:"异常"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异常"}},[t._v("#")]),t._v(" 异常")]),t._v(" "),a("h2",{attrs:{id:"类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类"}},[t._v("#")]),t._v(" 类")]),t._v(" "),a("p",[t._v("Dart 是一个面向对象编程语言，同时支持基于 mixin 的继承机制。")]),t._v(" "),a("blockquote",[a("p",[t._v("基于 mixin 的继承机制意味着什么？")])]),t._v(" "),a("h3",{attrs:{id:"子类不会继承超类的构造函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#子类不会继承超类的构造函数"}},[t._v("#")]),t._v(" 子类不会继承超类的构造函数")]),t._v(" "),a("p",[t._v("子类不会继承超类的构造函数。")]),t._v(" "),a("h3",{attrs:{id:"隐式接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#隐式接口"}},[t._v("#")]),t._v(" 隐式接口")]),t._v(" "),a("p",[t._v("隐式接口是怎样的？")]),t._v(" "),a("p",[t._v("搞不清楚隐式接口是搞什么飞机...")]),t._v(" "),a("h2",{attrs:{id:"泛型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#泛型"}},[t._v("#")]),t._v(" 泛型")]),t._v(" "),a("h2",{attrs:{id:"库和可见性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#库和可见性"}},[t._v("#")]),t._v(" 库和可见性")]),t._v(" "),a("p",[t._v("使用 import 和 library 可以帮助创建模块化的可分享的代码。")])])}),[],!1,null,null,null);r.default=_.exports}}]);